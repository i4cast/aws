>>> help(DFbVIF)

Help on class DFbVIF in module DFbVIF:

class DFbVIF(builtins.object)
 |  DFbVIF(vol_index_dict=None, len_learn_window=None, var_order=1, num_factors=1, ar_order_idio=1, num_pcs=1, alt_ar_order={}, alt_num_pcs={}, vif_type='', max_forecast_step=1)
 |
 |  Dynamic Factor Based Volatility Index Forecast (DFbVIF)
 |  model to make multi-step forecasts of multiple volatility
 |  indexes, and dynamic volatility attributions, by applying
 |  dynamic factor model (DFM) volatility analysis on DFM-
 |  input time-series, which are multiple time-series including
 |  both price time-series underlying the volatility indexes
 |  and other infomation-enhancing time-series.
 |
 |  Volatility indexes time-series VI(t)
 |  ------------------------------------
 |
 |  Volatility index time-series
 |      h : number of volatility indexes (vi) to be
 |          forecasted
 |      vi(t) : time-series of h-by-1 vector vi of h
 |          volatility index values with time index t
 |      vi_j(t) : time-series of j-th volatility index
 |      VI(t) : time-series of h-by-h diagonal matrix
 |          VI of h volatility index values with time
 |          index t
 |      VI_jj(t) : time-series of j-th volatility index
 |          vi_j(t)
 |      VI2(t) : time-series of h-by-h diagonal matrix
 |          of h implied variances VI2 = VI VI
 |
 |  Vector time-series y_und(t), y_info(t) & y(t)
 |  ---------------------------------------------
 |
 |  Notaion
 |      "Underlying time-series"
 |          An underlying time-series, underlying
 |          a given volatility index, is a time-
 |          series of (e.g. percentage or logarithmic)
 |          changes in price/value/index, with the
 |          volatility index value representing expected
 |          volatility level of the underlying time-
 |          series, expected at a specified future time
 |
 |  Underlying vector time-series y_und(t)
 |      y_und(t) : h underlying time-series (of
 |          changes in prices/values/indexes)
 |          underlying h volatility index vi(t),
 |          with value of vi(t) showing expected
 |          future volatility vector of y_und(t)
 |
 |  info-enhancing vector time-series y_info(t)
 |      y_info(t) : multiple other time-series
 |          (of changes in prices/values/indexes)
 |          dynamically correlated with some or
 |          all underlying time-series y_und(t),
 |          serving as information-enhancing
 |          time-series to enhance predictive
 |          power of model forecast
 |
 |  DFM-input time-series y(t)
 |      y(t) : vector time-series of n-by-1 combined
 |          vector y = [ y_und', y_info' ]' to serve
 |          as input data of dynamic factor model
 |          (DFM)
 |      n : number of observed time-series in DFM-
 |          input vector time-series y(t)
 |      c : n-by-1 mean vector of DFM-input vector
 |          time-series y(t)
 |
 |  Parameter values
 |      c = 0 : assuming y(t) is zero-mean DFM-
 |          input vector time-series
 |      t = 0, 1, 2, ..., T
 |      T : last time-stamp of data
 |
 |  Dynamic VI forecast
 |  -------------------
 |
 |  Reference phrase
 |      "Underlying volatility", "underlying variance":
 |          Volatilities, v1_und(t), or variances,
 |          v2_und(t), of underlying time-series,
 |          y_und(t)
 |
 |  Approaches
 |      * Values of volatility indexes, VI(t), represent
 |        expected volatility levels of underlying time-
 |        series, y_und(t), expected at a specified future
 |        time, therefore volatility indexes and under-
 |        lying volatilities are closely related
 |      * Volatilities of DFM-input vector time-
 |        series y(t), can be effectively modeled and
 |        forecasted by dynamic factor models (DFMs)
 |      * DFbVIF utilizes DFM volatility analysis on
 |        DFM-input vector time-series to forecast
 |        volatility indexes
 |      * For example, volatility index forecasts by
 |        DFbVIF include: (1) UVF forecasts, (2) QAR
 |        forecasts, and (3, a future development)
 |        TSF forecasts
 |      * Data set of DFM-input vector time-series
 |        can have much more informatoin, and therefore
 |        much more predictive power, than sub-set of
 |        underlying time-series alone
 |      * In addition, with DFM modeling, DFbVIF is
 |        able to attribute volatility index forecasts
 |        to dynamic sources of volatility, e.g.
 |        variance of common factors and idiosyncratic
 |        UDCs, autocovariance of factors and UDCs,
 |        and varaiance of prediction/residual errors
 |
 |  UVF forecast
 |      "Volatility index forecasts with underlying
 |          volatility forecasts (UVF) as predictors"
 |      Forecasting changes in volatility indexes
 |          with forecasted changes in underlying
 |          volatilities
 |
 |  QAR forecast
 |      "Volatility index forecasts by quadratic
 |          autoregressive (QAR) equation with QAR
 |          coefficients of underlying volatilities"
 |      Making quadratic autoregressive (QAR)
 |          forecasts of volatility indexes with
 |          QAR equation of underlying volatilities
 |
 |  TSF forecast (future development)
 |      "Volatility index forecasts by direct time-
 |          series forecasts (TSF)"
 |      Forecasting volatility indexes by making
 |          time-series forecasts of volatility
 |          indexes directly
 |
 |  Optimal UVF, QAR and TSF forecasts
 |      Optimal UVF, QAR and TSF forecasts may
 |      be achieved by different sets of parameters
 |      of dynamic factor model
 |
 |  Model average forecast of VI(t)
 |      Simple averages of UVF, QAR and TSF
 |      forecasts of volatility indexes
 |
 |  Dynamic factor model (DFM) on VTS y(t)
 |  --------------------------------------
 |
 |  Acronyms
 |      VAR : vector autoregressive (VAR) model
 |          of vector (multiple) time-series
 |      DFM : dynamic factor model (DFM) of vector
 |          (or multivariate) time-series
 |      LMDFM : long-memory DFM of multivariate
 |          time-series
 |      AR : autoregressive (AR) model of
 |          individual (or univariate) time-
 |          series
 |      YWpcAR : Yule-Walker-PCA autoregressive
 |          (YWpcAR) model of individual time-
 |          series
 |
 |  Notations - DFM (and LMDFM) model
 |      f(t) : time-series of m-by-1 common dynamic
 |          factor score vector f with time index t
 |      X0 : n-by-m matrix of loadings of common
 |          dynamic factor score time-series f(t)
 |          on DFM-input vector time-series y(t)
 |      A(j) : m-by-m matrix of vector autoregressive
 |          (VAR) coefficients of common dynamic
 |          factor score time-series f(t); j =
 |          1,2,...,p
 |      v(t) : time-series of m-by-1 vector of errors
 |          in VAR prediction of common dynamic factor
 |          score f(t)
 |      m : number of common dynamic factors, or
 |          factor score time-series, 1 <= m < n
 |      p : vector autoregressive (VAR) order of
 |          dynamic factor model
 |
 |  Notations - YWpcAR model
 |      g(t) : PC-based unobserved dynamic component
 |          (UDC) time-series of data time-series u(t)
 |      D(j) : PC-based diagonal autoregressive (AR)
 |          coefficient matrix
 |      e(t) : time-series of n-by-1 vector of errors
 |          in AR prediction of UDC g(t)
 |      l : number of PCs of univariate YWpcAR model
 |      q : univariate autoregressive (AR) order of
 |          YWpcAR model
 |
 |  DFM representation of DFM-iunput VTS y(t)
 |      y(t) = z(t) + u(t)
 |      z(t) = X0 f(t)
 |      f(t) = A(1) f(t-1) + ... + A(p) f(t-p) + v(t)
 |      u(t) = g(t) + r(t)
 |      g(t) = D(1) g(t-1) + ... + D(q) g(t-q) + e(t)
 |
 |  Notations - components multivariate time-series
 |      z(t) : time-series of n-by-1 common component
 |          vector z, z(t) = X0 f(t), of DFM-input
 |          vector time-series y(t)
 |      u(t) : time-series of n-by-1 idiosyncratic
 |          component vector of DFM-input VTS
 |          y(t) = z(t) + u(t)
 |      r(t) : time-series of n-by-1 residual error
 |          vector of idiosyncratic time-series u(t)
 |
 |  Decomposition of DFM-input VTS y(t)
 |      y(t) = X0 f(t) + g(t) + r(t)
 |
 |  DFM-based volatility estimates
 |  ------------------------------
 |
 |  Estimated variance of residual error
 |      Rr(t) = diag( Var( r(t) ) ) = Rr
 |      Rr(t) : estimated n-by-n diagonal variance
 |          matrix of residual error r(t)
 |
 |  Estimated variance of dynamic factors
 |      V(t-j) = Var( f(t-j) )
 |          time-lag j = 0,1,...
 |      V(t-j) : estimated m-by-m diagonal variance
 |          matrix of dynamic factor score time-
 |          series f(t)
 |
 |  Estimated autocovariance of factors
 |      V(t-j, t-k) = Cov( f(t-j), f(t-k) )
 |          time-lags j,k = 0,1,...
 |      V(t-j, t-k) : estimated m-by-m autocovariance
 |          matrix of dynamic factor score time-
 |          series f(t)
 |      Notes of transpose:
 |          V(t-k, t-j) = transpose(V(t-j, t-k))
 |
 |  Estimated variance of UDC time-series
 |      W(t-j) = diag( Var( g(t-j) ) )
 |          time-lag j = 0,1,...
 |      W(t-j) : estimated n-by-n diagonal variance
 |          matrix of unobserved dynamic components
 |          (UDC) time-series g(t)
 |
 |  Estimated autocovariance of UDC time-series
 |      W(t-j, t-k) = diag( Cov( g(t-j), g(t-k) ) )
 |          time-lags j,k = 0,1,...
 |      W(t-j, t-k) : estimated n-by-n diagaonal
 |          autocovariance matrix of UDC time-series
 |          g(t)
 |      Notes of symmetry:
 |          W(t-k, t-j) = W(t-j, t-k)
 |
 |  Assumption about earlier values
 |      Using earliest available estimates as earlier
 |          values of estimated variance of dynamic
 |          factors f(t) and UDCs g(t), when time-lag
 |          j greater than VAR or AR order
 |      Examples:
 |          V(t-j) = V(t-p)  if j > p
 |          W(t-j) = W(t-q)  if j > q
 |
 |  Estimated variance-covariance of DFM-input VTS y(t)
 |      C(t-j) = Var( y(t-j) )
 |          = Var( X0 f(t-j) + g(t-j) + r(t-j) )
 |          = X0 V(t-j) X0' + W(t-j) + Rr(t)
 |              time-lag j = 0,1,2,...
 |      C(t-j) : estimated n-by-n variance-covariance
 |          matrix of DFM-input vector time-series y(t)
 |
 |  Estimated variance of DFM-input VTS y(t)
 |      v2(t-j) = diag( C(t-j) ) =
 |          = diag( X0 V(t-j) X0' ) + W(t-j) + Rr(t)
 |              time-lag j = 0,1,2,...
 |      v2(t-j) = diag( C(t-j) ) : estimated n-by-n
 |          diagonal variance matrix of DFM-input
 |          vector time-series y(t)
 |
 |  DFM-based volatility prediction
 |  -------------------------------
 |
 |  Estimated variance of prediction errors
 |      Rv(t) = diag( Var( v(t) ) ) = Rv
 |      Rv(t) : estimated m-by-m diagonal variance
 |          matrix of dynamic factor prediction
 |          error v(t)
 |      Re(t) = diag( Var( e(t) ) ) = Re
 |      Re(t) : estimated n-by-n diagonal variance
 |          matrix of UDC (unobserved dynamic
 |          components) prediction error e(t)
 |
 |  Predicted variance of dynamic factors f(t)
 |      Vt = Var( Sum[ A(j) f(t-j); j=1,...,p ] + v(t) )
 |         = Sum[ A(j) V(t-j, t-k) A(k)'; j,k=1,...,p ] + Rv
 |      V(t) = diag( Vt )
 |      V(t) : predicted m-by-m diagonal variance
 |          matrix of dynamic factor score time-series
 |          f(t)
 |
 |  Predicted autocovariance of factors f(t)
 |      V(t, t-k) = Cov( f(t), f(t-k) )
 |          = Sum[ A(j) V(t-j, t-k); j=1,...,p ]
 |      V(t, t-k) : predicted k-lag (k > 0) m-by-m
 |          autocovariance matrix of dynamic factor
 |          score time-series f(t)
 |
 |  Predicted variance of UDC g(t)
 |      Wt = Var( Sum[ D(j) g(t-j); j=1,...,q ] + e(t) )
 |         = Sum[ D(j) W(t-j, t-k) D(k)'; j,k=1,...,q ] + Re
 |      W(t) = diag( Wt ) = Wt
 |      W(t) : predicted n-by-n diagonal variance
 |          matrix of UDC time-series g(t)
 |
 |  Predicted autocovariance of UDC g(t)
 |      W(t, t-k) = Cov( g(t), g(t-k) )
 |          = Sum[ D(j) W(t-j, t-k); j=1,...,q ]
 |      W(t, t-k) : predicted k-lag (k > 0) n-by-n
 |          diagonal autocovariance matrix of VI-
 |          adjusted UDC time-series g(t)
 |
 |  Predicted VCM of DFM-input VTS y(t)
 |      C(t) = X0 V(t) X0' + W(t) + Rr =
 |          = X0 ( diag( Sum[
 |            A(j) V(t-j, t-k) A(k)'; j,k=1,...,p
 |            ] ) + Rv(t) ) X0' + Sum[
 |            D(j) W(t-j, t-k) D(k)'; j,k=1,...,q
 |            ] + Re(t) + Rr(t)
 |      C(t) : predicted n-by-n variance-covariance
 |          matrix of DFM-input vector time-series
 |          y(t)
 |
 |  Predicted variance of DFM-input VTS y(t)
 |      v2(t) = diag( C(t) ) =
 |          = diag( X0 ( diag( Sum[
 |            A(j) V(t-j, t-k) A(k)'; j,k=1,...,p
 |            ] ) + Rv ) X0' ) + Sum[
 |            D(j) W(t-j, t-k) D(k)'; j,k=1,...,q
 |            ] + Re(t) + Rr(t)
 |      v2(t) = diag( C(t) ) : predicted n-by-n
 |          diagonal variance matrix of DFM-input
 |          vector time-series y(t)
 |
 |  DFM-based volatility forecasts
 |  ------------------------------
 |
 |  Forecasted variance of dynamic factors f(t)
 |      V(t+s) = diag( Sum[
 |          A(j) V(t+s-j, t+s-k) A(k)'; j,k=1,...,p
 |          ] ) + Rv(t)
 |      V(t+s) : forecasted m-by-m diagonal variance
 |          matrix of dynamic factor score time-
 |          series f(t) at forecast step s = 1,...
 |
 |  Forecasted autocovariance of factors f(t)
 |      V(t+s, t+s-k)
 |          = Sum[ A(j) V(t+s-j, t+s-k) ; j=1,...,p ]
 |      V(t+s, t+s-k) : forecasted k-lag (k > 0)
 |          m-by-m autocovariance matrix of dynamic
 |          factor score time-series f(t) at forecast
 |          step s = 1,2,...
 |
 |  Forecasted variance of UDC g(t)
 |      W(t+s) = Sum[
 |          D(j) W(t+s-j, t+s-k) D(k)'; j,k=1,...,q
 |          ] + Re(t)
 |      W(t+s) : forecasted n-by-n diagonal variance
 |          matrix of unobserved dynamic component
 |          (UDC) time-series g(t) at forecast step
 |          s = 1,2,...
 |
 |  Forecasted autocovariance of UDC g(t)
 |      W(t+s, t+s-k)
 |          = Sum[ D(j) W(t+s-j, t+s-k) ; j=1,...,q ]
 |      W(t+s, t+s-k) : forecasted k-lag (k > 0)
 |          n-by-n diagonal autocovariance matrix of
 |          ed UDC time-series g(t) at forecast step
 |          s = 1,2,...
 |
 |  Forecasted VCM of DFM-input VTS y(t)
 |      C(t+s) = X0 ( diag( Sum[
 |          A(j) V(t+s-j, t+s-k) A(k)'; j,k=1,...,p
 |          ] ) + Rv(t) ) X0' + Sum[
 |          D(j) W(t+s-j, t+s-k) D(k)'; j,k=1,...,q
 |          ] + Re(t) + Rr(t)
 |      C(t+s) : forecasted n-by-n variance-
 |          covariance matrix of DFM-input vector
 |          time-series y(t) at forecast step
 |          s = 1,2,...
 |
 |  Forecasted variance of DFM-input VTS y(t)
 |      v2(t+s) = diag( C(t+s) ) =
 |          = diag( X0 ( diag( Sum[
 |            A(j) V(t+s-j, t+s-k) A(k)'; j,k=1,...,p
 |            ] ) + Rv ) X0' ) + Sum[
 |            D(j) W(t+s-j, t+s-k) D(k)'; j,k=1,...,q
 |            ] + Re(t) + Rr(t)
 |      v2(t+s) = diag( C(t+s) ) : forecasted n-by-n
 |          diagonal variance matrix of DFM-input
 |          vector time-series y(t) at forecast step
 |          s = 1,2,...
 |
 |  Underlying volatility estimates/forecasts
 |  -----------------------------------------
 |
 |  Underlying loadings of factors f(t)
 |      X0_und = upper h-by-m block of n-by-m matrix
 |          of factor loadings X0
 |      X0_und : h-by-m matrix of loadings of common
 |          dynamic factor score time-series f(t) on
 |          underlying vector time-series y_und(t)
 |
 |  Estimated/forecasted variance of underlying UDC
 |      W_und(t+s-j) = upper-left h-by-h diagonal
 |          block of n-by-n diagonal matrix of
 |          estimated/forecasted variance of UDC
 |          g(t)
 |      W_und(t+s-j) : h-by-h diagonal matrix of
 |          estimated/forecasted variance of under-
 |          lying UDC g_und(t) of underlying time-
 |          series y_und(t), with time-lag = 0,1,
 |          ..., at forecast step s = 0,1,...
 |
 |  AR coefficients of underlying UDC or VTS
 |      D_und(j) = upper-left h-by-h diagonal block
 |          of n-by-n diagonal matrix of PC-based
 |          autoregressive (AR) coefficients
 |      D_und(j) : h-by-h diagonal matrix of PC-
 |          based autoregressive (AR) coefficients
 |          of underlying VTS y_und(t) and under-
 |          lying UDC g_und(t)
 |
 |  Underlying UDC prediction error
 |      Re_und = upper-left h-by-h diagonal block
 |          of n-by-n diagonal matrix of variance
 |          of UDC prediction error e(t)
 |      Re_und : h-by-h diagonal matrix of
 |          estimated variance of underlying
 |          UDC prediction error e_und(t)
 |
 |  Variance of underlying residual error
 |      Rr_und = upper-left h-by-h diagonal block
 |          of n-by-n diagonal matrix of variance
 |          of residual error r(t)
 |      Rr_und : h-by-h diagonal matrix of
 |          estimated variance of underlying
 |          residual error r_und(t)
 |
 |  Estimated variance of underlying y_und(t)
 |      v2_und(t-j) = diag( C_und(t-j) ) =
 |          = diag( X0_und V(t-j) X0_und' ) +
 |          + W_und(t-j) + Rr_und(t) ;
 |              time-lag j = 0,1,2,...
 |      v2_und(t-j) : estimated h-by-h diagonal
 |          matrix of variance of underlying
 |          time-series y_und(t), with time-lag
 |          j = 0,1,2,...
 |
 |  Estimated volatility of underlying y_und(t)
 |      v1_und(t-j) =
 |          = sqrt( v2_und(t-j) )
 |      v1_und(t-j) : estimated h-by-h diagonal
 |          matrix of volatility of underlying
 |          time-series y_und(t), with time-lag
 |          j = 0,1,2,...
 |
 |  Predicted/forecasted variance of y_und(t)
 |      v2_und(t+s|t) = diag( C_und(t+s|t) ) =
 |          = diag( X0_und ( diag( Sum[
 |            A(j) V(t+s-j, t+s-k) A(k)'; j,k=1,...,p
 |            ] ) + Rv ) X0_und' ) + Sum[
 |            D_und(j) W_und(t+s-j, t+s-k) D_und(k)';
 |            j,k=1,...,q ] + Re_und(t) + Rr_und(t)
 |      v2_und(t+s) : h-by-h diagonal matrix of
 |          predicted/forecasted variance of under-
 |          lying vector time-series y_und(t),
 |          estimated (s = 0) and forecasted
 |          (s >= 1) at forecast step s = 0,1,2,...
 |
 |  Predicted/forecasted volatility of y_und(t)
 |      v1_und(t+s|t) =
 |          = sqrt( v2_und(t+s|t) )
 |      v1_und(t+s) : predicted/forecasted h-by-h
 |          diagonal volatility matrix of underlying
 |          vector time-series y_und(t), estimated
 |          (s = 0) and forecasted (s >= 1) at
 |          forecast step s = 0,1,2,...
 |
 |  Parts and sources of underlying volatility
 |  ------------------------------------------
 |
 |  First-step forecast of variance of y_und(t)
 |      v2_und(t+1|t) = diag( C_und(t+1|t) ) =
 |          = diag( X0_und [ diag( Sum[
 |            A(j) V(t+1-j, t+1-k) A(k)'; j,k = 1:p
 |            ] ) + Rv(t) ] X0_und' ) + Sum[
 |            D_und(j) W_und(t+1-j, t+1-k) D_und(k)';
 |            j,k = 1:q ] + Re_und(t) + Rr_und(t)
 |      v2_und(t+1|t) : h-by-h diagonal matrix of
 |          first-step forecast of variance of under-
 |          lying vector time-series y_und(t)
 |
 |  Dynamic parts of variance of y_und(t)
 |      pv_und('comm', t, j, k) = diag(
 |          X0_und diag( A(j) V(t+1-j, t+1-k) A(k)' ) X0_und'
 |          );  j,k = 1,2,...,p
 |      pv_und('idio', t, j, k) =
 |          = D_und(j) W_und(t+1-j, t+1-k) D_und(k)';
 |              j,k = 1,2,...,q
 |      pv_und('prederr', t) =
 |          = diag( X0_und Rv(t) X0_und' ) + Re_und(t) + Rr_und(t);
 |              j,k = 0
 |      pv_und(sub-model, t, j, k):
 |          dynamic parts of diagonal variance matrix,
 |          represented by additive terms in first-step
 |          forecast of diagonal variance matrix of
 |          underlying vector time-series y_und(t)
 |      Note: sub-model = 'comm' (for common, based on
 |          common dynamic foactors); 'idio' (for idio-
 |          syncratic, based on idiosyncratic UDCs);
 |          'prederr' (for sum of common, idiosyncratic,
 |          and residual prediction errors)
 |
 |  First-step forecast of variance of y_und(t)
 |      v2_und(t+1|t) = diag( C_und(t+1|t) ) =
 |          = Sum[ pv_und('comm',t,j,k); j,k = 1:p ] +
 |          + X0_und Rv(t) X0_und' +
 |          + Sum[ pv_und('idio',t,j,k); j,k = 1:q ] +
 |          + Re_und(t) + Rr_und(t)
 |      v2_und(t+1|t) : first-step forecast of variance
 |          of underlying vector time-series y_und(t)
 |          as a sum of all parts
 |
 |  Sources of volatility
 |      A specific source of volatility: sub-total
 |          of a specific group of parts of volatility
 |
 |  Dynamic sources of volatility
 |      (1) 'common volatility': contribution from
 |          variances of dynamic common factors
 |      (2) 'common serial-correlation': contribution
 |          from vector autocovariances of dynamic
 |          common factors
 |      (3) 'idiosyncratic volatility': contribution
 |          from variance of idiosyncratic UDCs
 |      (4) 'idiosyncratic serial-correlation':
 |          contribution from autocovariance of
 |          idiosyncratic UDCs
 |      (5) 'prediction error': contribution from
 |          dynamic factor prediction error, UDC
 |          prediction error, and residual error
 |
 |  Dynamic sources of variance of y_und(t)
 |      'common volatility'
 |          = sum[ pv_und('comm',t,j,j); j = 1:p ]
 |      'common serial-correlation'
 |          = sum[ pv_und('comm',t,j,k); k not= j; j,k = 1:p ]
 |      'idiosyncratic volatility'
 |          = sum[ pv_und('idio',t,j,j); j = 1:q ]
 |      'idiosyncratic serial-correlation'
 |          = sum[ pv_und('idio',t,j,k); k not= j; j,k = 1:q ]
 |      'prediction error'
 |          = pv_und('prederr',t)
 |      'total'
 |          = v2_und(t+1|t)
 |
 |  Dynamic volatility attribution
 |  ------------------------------
 |
 |  Dynamic volatility attribution of y(t)
 |          'common volatility'
 |          'common serial-correl'
 |          'idio volatility'
 |          'idio serial-correl'
 |          'prediction error'
 |      Portions of volatility of DFM-input
 |          vector time-series y(t) attributed
 |          to dynamic sources of volatility
 |
 |  Quadratic autoregression (QAR)
 |  ------------------------------
 |
 |  Parts of variance of y_und(t)
 |      pv_und('comm', t,j,k)
 |      pv_und('idio', t,j,k)
 |      pv_und('prederr', t)
 |          parts of diagonal variance matrix
 |          of underlying time-series y_und(t)
 |
 |  Factor-based QAR coefficients
 |      qc_V(t, j, k) =
 |          = Inv(v1_und(t+1-j)) pv_und('comm', t,j,k) Inv(v1_und(t+1-k))';
 |              j,k = 1,2,...,p
 |      qc_V(t, j, k):
 |          h-by-h diagonal matrix of factor-based
 |          QAR coefficients in 1-step forecast
 |          of variance of underlying time-series
 |          y_und(t), with time-lags j,k = 1,2,...,p
 |
 |  Factor-explained parts of variance of y_und(t)
 |      pv_und('comm', t,j,k) =
 |          = v1_und(t+1-j) qc_V(t,j,k) v1_und(t+1-k)';
 |              j,k = 1,2,...,p
 |      pv_und('comm',t,j,k):
 |          factor-explained parts of variance of
 |          underlying time-series y_und(t), expressed
 |          as an additive term of quadratic auto-
 |          regressive (QAR) equation
 |
 |  UDC-based QAR coefficients
 |      qc_W(t, j, k) =
 |          = Inv(v1_und(t+1-j)) pv_und('idio',t,j,k) Inv(v1_und(t+1-k))'
 |              j,k = 1,2,...,q
 |      qc_W(t, j, k):
 |          h-by-h diagonal matrix of UDC-based
 |          QAR coefficients in 1-step forecast
 |          of variance of underlying time-series
 |          y_und(t), with time-lags j,k = 1,2,...,q
 |
 |  UDC-explained parts of variance of y_und(t)
 |      pv_und('idio', t,j,k) =
 |          = v1_und(t+1-j) qc_W(t,j,k) v1_und(t+1-k)';
 |              j,k = 1,2,...,q
 |      pv_und('idio',t,j,k):
 |          UDC-explained parts of variance of underlying
 |          time-series y_und(t), expressed as an additive
 |          term of quadratic autoregressive (QAR) equation
 |
 |  Dynamic QAR equation of variance of y_und(t)
 |      v2_qar(t+1) = sum[
 |          v1_und(t+1-j) qc_V(t,j,k) v1_und(t+1-k)';
 |              j,k = 1,2,...,p ] + sum[
 |          v1_und(t+1-j) qc_W(t,j,k) v1_und(t+1-k)';
 |              j,k = 1,2,...,q ] +
 |          pv_und('prederr',t)
 |      v2_qar(t+1):
 |          Sum total of all dynamic (common and idio-
 |          syncratic) parts, and error part, of variance
 |          of underlying time-series y_und(t), calculated
 |          by quadratic autoregressive (QAR) equation
 |
 |  Volatility index forecast: UVF method
 |  -------------------------------------
 |
 |  Underlying volatility forecast (UVF)
 |      Multi-step multivariate forecasts of variances
 |          of h underlying time-series, y_und(t),
 |          underlying h volatility indexes
 |
 |  UVF method
 |      Volatility index forecast with underlying
 |          volatility forecasts (UVF) as predictors
 |
 |  Multiplier of value-adjustment of UVF method
 |      B_uvf(t) = B_uvf =
 |          = VI2(t) Inv[ v2_und(t-0) ]
 |      B_uvf(t) = B_uvf
 |          h-by-h diagonal matrix of multipliers
 |          of value-adjustment of UVF (underlying
 |          volatility forecasts as predictors)
 |          method forcasting implied variance
 |      Note: B_uvf v2_und(t-0) = VI2(t)
 |
 |  UVF forecasts of implied variance VI2(t)
 |      VI2_uvf(t+s|t) =
 |          = B_uvf(t) v2_und(t+s|t)
 |      VI2_uvf(t+s|t)
 |          h-by-h diagonal matrix of s-step
 |          UVF (underlying volatility forecasts
 |          as predictors) forecasts of implied
 |          variance, with forecast step s =
 |          1,2,...,x
 |
 |  UVF forecasts of volatility index VI(t)
 |      VI2(t+s|t) = VI2_uvf(t+s|t)
 |      VI(t+s|t) = sqrt( VI2(t+s|t) )
 |      VI2(t+s|t) and VI(t+s|t):
 |          h-by-h diagonal matrix of s-step
 |          UVF (underlying volatility forecasts
 |          as predictors) forecasts of implied
 |          variance and of volatility index,
 |          with forecast step s = 1,2,...
 |
 |  UVF volatility attribution
 |          'common volatility'
 |          'common serial-correl'
 |          'idio volatility'
 |          'idio serial-correl'
 |          'prediction error'
 |      Same as portions of underlying volatility
 |          attributed to dynamic sources of
 |          underlying volatility
 |
 |  Volatility index forecast: QAR method
 |  -------------------------------------
 |
 |  Assumption on volatility dynamics
 |      Assuming dynamics of a volatility index closely
 |          related to dynamics of estimated volatility
 |          level of its underlying time-series, then
 |          quadratic autoregression (QAR) of a
 |          volatility index can be approximated by
 |          QAR of estimated volatility level of its
 |          underlying time-series
 |
 |  QAR method
 |      Forecasting volatility index by quadratic
 |          autoregressive (QAR) equation with
 |          QAR coefficients equal to those of
 |          estimated volatility level of
 |          underlying time-series
 |
 |  UN-Adjusted ex-error QAR forecast of VI2(t)
 |      vi2_qar(t+s|t) =
 |          = Sum[ VI(t+s-j) qc_V(t,j,k) VI(t+s-k)'; j,k=1:p ]
 |          + Sum[ VI(t+s-j) qc_W(t,j,k) VI(t+s-k)'; j,k=1:q ]
 |              forecast step s = 0,1,2,...,x
 |      vi2_qar(t+s|t)
 |          h-by-h diagonal matrix of UN-Adjusted
 |          and Error-Excluded s-step QAR (quadratic
 |          autoregressive) forecasts of implied
 |          variance VI2(t), with forecast step
 |          s = 0,1,2,...,x
 |
 |  Additive constant of value-adjustment of QAR forecast
 |      A_qar(t) = A_qar =
 |          = VI2(t) pv_und('prederr',t) Inv[ v2_und(t+1) ]
 |      A_qar(t) = A_qar
 |          h-by-h diagonal matrix of additive constants
 |          of value-adjustment of QAR (quadratic
 |          autoregressive) method forecasting implied
 |          variance
 |      Based on equation: A_qar(t) Inv[ VI2(t) ] =
 |          = pv_und('prederr',t) Inv[ v2_und(t+1) ]
 |
 |  Multiplier of value-adjustment of QAR forecast
 |      B_qar(t) = B_qar =
 |          = [ VI2(t) - A_qar(t) ] Inv[ vi2_qar(t|t-1) ]
 |      B_qar(t) = B_qar
 |          h-by-h diagonal matrix of multipliers
 |          of value-adjustment of QAR (quadratic
 |          autoregressive) method forecasting
 |          implied variance
 |      Based on equation: VI2(t) =
 |          = A_qar(t) + [ B_qar(t) vi2_qar(t|t-1) ]
 |
 |  QAR forecast of implied variance VI2(t)
 |      VI2_qar(t+s|t) = A_qar + { B_qar (
 |            Sum[ VI(t+s-j) qc_V(t,j,k) VI(t+s-k)'; j,k=1:p ]
 |          + Sum[ VI(t+s-j) qc_W(t,j,k) VI(t+s-k)'; j,k=1:q ] ) };
 |              step s = 1,2,...,x
 |      VI2_qar(t+s|t):
 |          h-by-h diagonal matrix of s-step QAR
 |          (quadratic autoregressive) forecasts
 |          of implied variance, step-wise with
 |          forecast step s = 1,2,...,x
 |
 |  QAR forecast of volatility index VI(t)
 |      VI2(t+s|t) = VI2_qar(t+s|t)
 |      VI(t+s|t) = sqrt( VI2(t+s|t) )
 |      VI2(t+s|t) and VI(t+s|t):
 |          h-by-h diagonal matrix of s-step QAR
 |          (quadratic autoregressive) forecasts
 |          of implied variance and of volatility
 |          index, step-wise with forecast step
 |          s = 1,2,...,x
 |
 |  Dynamic volatility attribution (QAR)
 |  ------------------------------------
 |
 |  Factor-explained parts of QAR volatility
 |      pv_qar('comm',t,j,k) =
 |          = B_qar(t) [ VI(t+1-j) qc_V(t,j,k) VI(t+1-k)' ];
 |              j,k = 1,2,...,p
 |      pv_qar('comm',t,j,k):
 |          factor-explained parts of quadratic
 |          autoregressive (QAR) forecast of
 |          implied variance
 |
 |  UDC-explained parts of QAR volatility
 |      pv_qar('idio',t,j,k) =
 |          = B_qar(t) [ VI(t+1-j) qc_W(t,j,k) VI(t+1-k)' ];
 |              j,k = 1,2,...q
 |      pv_qar('idio',t,j,k):
 |          UDC-explained parts of quadratic
 |          autoregressive (QAR) forecast of
 |          implied variance
 |
 |  Error part of QAR volatility
 |      pv_qar('prederr',t) =
 |          = A_qar(t)= A_qar
 |      pv_qar('prederr',t):
 |          Error part of quadratic autoregressive
 |          (QAR) forecast of implied variance
 |
 |  Dynamic sources of QAR volatility
 |      (1) 'common volatility': contribution from
 |          variances of dynamic common factors
 |      (2) 'common serial-correlation': contribution
 |          from vector autocovariances of dynamic
 |          common factors
 |      (3) 'idiosyncratic volatility': contribution
 |          from variance of idiosyncratic UDCs
 |      (4) 'idiosyncratic serial-correlation':
 |          contribution from autocovariance of
 |          idiosyncratic UDCs
 |      (5) 'prediction error': contribution from
 |          dynamic factor prediction error, UDC
 |          prediction error, and residual error
 |
 |  Dynamic sources of variance of QAR forecast
 |      'common volatility'
 |          = sum[ pv_qar('comm',t,j,j); j = 1:p ]
 |      'common serial-correlation'
 |          = sum[ pv_qar('comm',t,j,k); k not= j; j,k = 1:p ]
 |      'idiosyncratic volatility'
 |          sum[ pv_qar('idio',t,j,j); j = 1:q ]
 |      'idiosyncratic serial-correlation'
 |          sum[ pv_qar('idio',t,j,k); k not= j; j,k = 1:q ]
 |      'prediction error'
 |          = pv_qar('prederr',t) = A_qar(t)
 |      'total'
 |          = VI2(t+1|t)
 |
 |  QAR dynamic volatility attribution
 |          'common volatility'
 |          'common serial-correl'
 |          'idio volatility'
 |          'idio serial-correl'
 |          'prediction error'
 |      Portions of QAR volatility attributed
 |          to dynamic sources of QAR volatility
 |
 |  References
 |  ----------
 |
 |  i4cast LLC (2024). "Introduction to Multi-step Forecast
 |  of Multivariate Volatility with Dynamic Factor Model".
 |  https://github.com/i4cast/aws/blob/main/dynamic_factor_variance-covariance_model/publication/multi-step_forecast_of_multivariate_volatility_with_dynamic_factor_model.pdf
 |
 |  Data: observed vector time-series
 |  ---------------------------------
 |
 |  MTS : pandas.DataFrame,
 |          index (vi_list + ts_list),
 |          columns (asof_list)
 |      Multiple time-series data set including
 |          volatility index level vector time-
 |          series (VIL, pd.DataFrame, index=vi_list)
 |          and DFM-input vector time-series (VTS,
 |          pd.DataFrame, index=ts_list)
 |      Row time-series of column vector with first
 |          column as oldest and last one as latest
 |
 |  VIL : pandas.DataFrame, index (vi_list),
 |          columns (asof_list)
 |      Volatility index level vector time-series,
 |          as input data for DFbVIF model learning
 |          and inference
 |      Row time-series of column vector with first
 |          column as oldest and last one as latest
 |
 |  vi_list : list
 |      List of name/symbol/label strings of multiple
 |          volatility index time-series, as list of
 |          index axis of VIL DataFrame
 |
 |  num_vi : int >= 1
 |      Number of volatility indexes = len(vi_list)
 |
 |  VTS : pandas.DataFrame, index (ts_list),
 |          columns (asof_list)
 |      DFM-input vector time-series (of logarithmic/
 |          percent changes in prices/values/indexes)
 |          including underlying vector time-series
 |          (underlying volatility indexes) and other
 |          information-enhancing vector time-series
 |          (dynamically correlated with underlying
 |          ones), as input data for DFbVIF model
 |          learning and inference
 |      Row time-series of column vector with first
 |          column as oldest and last one as latest
 |
 |  ts_list : list ([ts_1, ts_2, ...])
 |      List of name/symbol/label strings of individual
 |          time-series of DFM-input vector time-series,
 |          as list of index axis of VTS DataFrame
 |
 |  asof_list : list
 |          ([t_stamp_1, t_stamp_2, ..., t_stamp_T])
 |      List of as-of time-stamps of observed (DFM-input
 |          vector) time-series, as list of columns axis
 |          of VIL or VTS DataFrame
 |
 |  num_ts : int >= 1
 |      Number of observed time-series
 |          = len(ts_list)
 |
 |  len_ts : int > 1
 |      Length of observed (vector) time-series
 |          = len(asof_list)
 |
 |  Learning parameters
 |  -------------------
 |
 |  vol_index_dict : dict,
 |          keys (vi_list),
 |              vi_list : list (vi1, vi2, ...)
 |          values (sub(ts_list) or =None)
 |              ts_list : list (ts1, ts2, ...)
 |      dict-Type list of key-value pairs of volatility
 |          indexes (keys, vi_list) and, if to be
 |          forecasted, correspondent underlying time-
 |          series (values, sub(ts_list))
 |      Reference expression:
 |          und_list = [v for v in obj.values() if (v in ts_list)]
 |          idx_list = [k for k in vi_list if (obj[k] in und_list)]
 |          und_list = [obj[k] for k in idx_list]
 |
 |  len_learn_window : int >> 1
 |      Length of trailing time window of data points
 |          for model learning
 |
 |  var_order : int >= 1
 |      Vector autoregressive (VAR) order, p, of dynamic
 |          factor model for common components of vector
 |          time-series
 |      Notes:
 |          var_order <= len_learn_window
 |          len_ts >= len_learn_window + (3 var_order)
 |
 |  num_factors : int >= 1
 |      Number of factors of dynamic factor model for
 |          common components of vector time-series
 |      Notes:
 |          num_factors < min(len_learn_window, num_ts)
 |
 |  ar_order_idio : int >= 1
 |      Autoregressive (AR) order, q, of AR model for
 |          idiosyncratic components of individual time-
 |          series, with q applying to all time-series
 |          other than those specified, if any, in dict-
 |          type parameter alt_ar_order
 |      Notes:
 |          ar_order_idio <= len_learn_window
 |          len_ts >= len_learn_window + (2 ar_order_idio)
 |
 |  num_pcs : int >= 1
 |      Number of principal components (PCs), m, of PC-
 |          based AR model for idiosyncratic components
 |          of individual time-series, with m applying
 |          to all time-series other than those specified,
 |          if any, in dict-type parameter alt_num_pcs
 |      Notes:
 |          num_pcs < ar_order_idio
 |
 |  alt_ar_order : dict {ts1id: q1, ts2id: q2, ...} or {}
 |      Autoregressive (AR) orders, q1, q2, ..., if any,
 |          applying to idiosyncratic components of
 |          specified time-series ts1, ts2, ...
 |      Notes:
 |          ts1id, ts2id, ...: in VTS.index, labels of
 |          specified time-series ts1, ts2, ...
 |
 |  alt_num_pcs : dict {ts1id: m1, ts2id: m2, ...} or {}
 |      Numbers of principal components (PCs), m1, m2,
 |          ..., if any, applying to idiosyncratic
 |          components of specified time-series ts1,
 |          ts2, ...
 |      Notes:
 |          ts1id, ts2id, ...: in VTS.index, labels of
 |          specified time-series ts1, ts2, ...
 |
 |  Inference parameters
 |  --------------------
 |
 |  vif_type : str, in ('uvf', 'qar')
 |      Type of volatility index forecasts (VIF)
 |          and dynamic volatility attributions
 |          to be generated
 |      Type of VIF
 |          'uvf', UVF forecasts and attributions
 |          'qar', QAR forecasts and attributions
 |
 |  max_forecast_step : int >= 1
 |      Maximum number of forecasting steps
 |          of volatility (variance-covariance)
 |          forecasts
 |
 |  Attributes (vector time-series data)
 |  ------------------------------------
 |
 |  idx_list : list
 |      Sublist of vi_list of name/symbol/label
 |          strings of volatility index time-series
 |          to be forecasted, each serving as expected
 |          volatility levels of its underlying time-
 |          series
 |
 |  num_idx : int >= 1
 |      Number of volatility indexes to be forecasted
 |          = len(idx_list)
 |
 |  und_list : list
 |      Sublist of ts_list, with j-th name/symbol/label
 |          string, und_list[j], representing underlying
 |          time-series of j-th volatility index,
 |          idx_list[j]
 |      Reference expression:
 |          und_list[j] = vol_index_dict[idx_list[j]]
 |              j = 1,2,...,num_idx
 |
 |  asof : time-stamp object
 |      Last time-stamp of observed vector time-series data
 |          utilized in estimation of values in object obj
 |      Examples:
 |          obj['asof'] = asof
 |              when isinstance(obj, type(dict()))
 |          obj.loc['asof'] = asof
 |              when isinstance(obj, type(pd.Series()))
 |          obj.loc[:, 'asof'] = asof
 |              when isinstance(obj, type(pd.DataFrame()))
 |          obj.name = asof
 |              when isinstance(obj, type(pd.Series()))
 |
 |  stdev_vec : pd.Series, index (ts_list)
 |      Sample standard deviation vector of DFM-input
 |          vector time-series on data points in last
 |          learning window
 |      stdev_vec.name = asof
 |
 |  Attributes (underlying variance)
 |  --------------------------------
 |
 |  all_step_list : list, [
 |          (- max(var_order, max_ar_order)), ...,
 |          -1, 0, 1, ..., max_forecast_step]
 |      List of time steps of estimated (step <= 0)
 |          and forecasted (step >= 1) variance data
 |
 |  all_var_base : pd.DataFrame, index (ts_list),
 |          columns (all_step_list + ['asof'])
 |      All estimated and forecasted base-case variance
 |          of base-case time-series of DFM-input vector
 |          time-series, estimated and forecasted by
 |          DFM-based volatility forecast model DFVCM
 |      Reference expression:
 |          diag( X0 V(t+s-j) X0' ) + W(t+s-j)) + Rr(t)
 |              j,s = 0,1,2,...
 |
 |  all_variance : pd.DataFrame, index (ts_list),
 |          columns (all_step_list + ['asof'])
 |      All estimated and forecasted variance of
 |          DFM-inputd vector time-series, estimated
 |          and forecasted by DFM-based volatility
 |          forecast model DFVCM
 |      Reference expression:
 |          diag( X0 V(t+s-j) X0' ) + W(t+s-j)) + Rr(t)
 |              j,s = 0,1,2,...
 |
 |  comm_lagtup_list : list,
 |          [(1, 1), (1, 2), ..., (j, k), ..., (p, p)]
 |              j=1,2,...,p; k=j,j+1,...,p
 |      List of time lag tuples of common components
 |          of estimated and forecasted quadratic VAR
 |          terms, with p = var_order
 |
 |  idio_lagtup_list : list,
 |          [(1, 1), (1, 2), ..., (j, k), ..., (q, q)]
 |              j=1,2,...,q; k=j,j+1,...,q
 |      List of time lag tuples of idiosyncratic
 |          components of estimated and forecasted
 |          quadratic VAR terms, with q = max_ar_order
 |
 |  vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |      List of variance or covariance forecast steps,
 |          in multi-step forecasts of variance, covariance
 |          or autocovariance of vector time-series
 |      Note: step = 0 for nowcast or estimate
 |
 |  indiv_var_parts : dict, keys ('comm', 'idio', 'asof')
 |          obj['comm'] : pd.DataFrame, index (ts_list),
 |              columns (comm_lagtub_list + ['pred_err'])
 |          obj['idio'] : pd.DataFrame, index (ts_list),
 |              columns (idio_lagtub_list + ['pred_err'])
 |      Parts of variance of individual time-series of
 |          DFM-input vector time-series, predicted by
 |          dynamic common factors for obj['comm'], and
 |          by idiosycratic UDC for obj['idio']
 |      Reference expression of 'comm'
 |          diag( X0 diag( A(j) V(t+1-j, t+1-k) A(k)' ) X0' );
 |          diag( X0 Rv(t) X0' );
 |              for j = 1,2,...,p, k = 1,2,...,p
 |      Reference expression of 'idio'
 |          D(j) W(t+1-j, t+1-k) D(k)';
 |          Re(t) + Rr(t);
 |              for j = 1,2,...,q, k = 1,2,...,q
 |
 |  var_source_list : list, [
 |          'Common volatility',
 |          'Common serial-correlation',
 |          'Idiosyncratic volatility',
 |          'Idiosyncratic serial-correlation',
 |          'Prediction error',
 |          'Total']
 |      List of aggregated dynamic sources of volatility
 |          measured by contributions to forecasts of
 |          variance
 |
 |  indiv_var_attrib : pd.DataFrame, index (ts_list),
 |          columns (var_source_list + ['asof'])
 |      Weights of attribution of individual variance
 |          forecast to dynamic sources of volatility
 |          of individual time-series of observed
 |          vector time-series
 |
 |  Attributes (VI forecast)
 |  ------------------------
 |
 |  und_variance : pd.DataFrame, index (idx_list),
 |          columns (all_step_list + ['asof'])
 |      All estimated and forecasted variance of VI-
 |          adjusted underlying time-series (underlying
 |          volatility indexes)
 |      Reference expression:
 |          diag( X0 V(t+s-j) X0' ) + W(t+s-j)) + Rr(t)
 |              j,s = 0,1,2,...
 |
 |  qar_coef_comm : pd.DataFrame, index (idx_list),
 |          columns (comm_lagtup_list + ['asof'])
 |      Diagonal factor-based QAR coefficient
 |          matrixes in 1-step forecast of variance
 |          of underlying time-series
 |      Reference expression:
 |          [ Inv(v1_und(t+1-j)) dp_und('comm',t,j,k)
 |              Inv(v1_und(t+1-k))' ]
 |      Note of QAR:
 |          factor-explained parts of variance of
 |          underlying time-series are additive terms
 |          of quadratic autoregressive (QAR) equation
 |
 |  qar_coef_idio : pd.DataFrame, index (idx_list),
 |          columns (idio_lagtup_list + ['asof'])
 |      Diagonal UDC-based QAR coefficient
 |          matrixes in 1-step forecast of
 |          variance of underlying time-series
 |      Reference expression:
 |          [ Inv(v1_und(t+1-j)) dp_und('idio',t,j,k)
 |              Inv(v1_und(t+1-k))' ]
 |      Note of QAR:
 |          UDC-explained parts of variance of under-
 |          lying time-series are additive terms of
 |          quadratic autoregressive (QAR) equation
 |
 |  min_vi2f_ratio : pd.DataFrame,
 |          index (idx_list),
 |          columns (vcf_step_list)
 |      Minimum realized s-step ratio of implied
 |          vairiance, VI2(t) Inv( VI2(t-s) ),
 |          serving as lower limit of forecasted
 |          implied variance over last observed
 |          value, VI2(t+s|t) Inv( VI2(t) )
 |
 |  mult_uvf : pd.Series, index (idx_list)
 |      Multiplier of value-adjustment of UVF
 |          (underlying volatility forecasts
 |          as predictors) method forecasting
 |          implied variance
 |      Reference expression:
 |          B_uvf = VI2(t) Inv[ v2_und(t-0) ]
 |
 |  const_qar : pd.Series, index (idx_list)
 |      Additive constant of value-adjustment
 |          of QAR (quadratic autoregressive)
 |          method forecasting implied variance
 |      Reference expression:
 |          A_qar = VI2(t) pv_und('prederr',t) Inv[ v2_und(t+1) ]
 |
 |  mult_qar : pd.Series, index (idx_list),
 |      Multiplier of value-adjustment of QAR
 |          (quadratic autoregressive) method
 |          forecasting implied variance
 |      Reference expression:
 |          B_qar = [ VI2(t) - A_qar ] Inv[ vi2_qar(t|t-1) ]
 |
 |  vi2_forec_uvf : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |      Multi-step multivariate forecasts of implied
 |          variances with underlying volatility
 |          forecasts (UVF) as predictors
 |      Reference expression:
 |          VI2(t+s|t) = B_uvf(t) v2_und(t+s|t)
 |
 |  vi2_forec_qar : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |      Multi-step multivariate forecasts of implied
 |          variances with quadratic autoregression
 |          (QAR) equation
 |      Reference expression:
 |          VI2(t+s|t) = A_qar + { B_qar (
 |            Sum[ VI(t+s-j) qc_V(t,j,k) VI(t+s-k)'; j,k=1:p ]
 |          + Sum[ VI(t+s-j) qc_W(t,j,k) VI(t+s-k)'; j,k=1:q ] ) };
 |
 |  vi2_forec : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |      Multi-step multivariate forecasts of implied
 |          variances
 |      Reference expression: vi2_forec =
 |          = vi2_forec_uvf or vi2_forec_qar
 |
 |  vi2_forec_ratio : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |      Ratios of UVF and QAR forecasts of implied
 |          variances over realized values of implied
 |          variances at vcf_step = 0, with ratios
 |          = 1 at vcf_step = 0
 |
 |  vi2_source_list : list, [
 |          'Common volatility',
 |          'Common serial-correlation',
 |          'Idiosyncratic volatility',
 |          'Idiosyncratic serial-correlation',
 |          'Prediction error',
 |          'Total']
 |      List of aggregated dynamic sources of volatility
 |          measured by contributions to (UVF or QAR)
 |          forecasts of implied variance
 |      (1) 'Common volatility': contribution from
 |          variances of dynamic common factors
 |      (2) 'Common serial-correlation': contribution
 |          from autocovariances of daynmic common
 |          factos
 |      (3) 'Idiosyncratic volatility': contribution
 |          from variance of idiosyncratic UDC
 |      (4) 'Idiosyncratic serial-correlation':
 |          contribution from autocovariance of
 |          idiosyncratic UDC
 |      (5) 'Prediction error': contribution from
 |          dynamic factor prediction error, UDC
 |          prediction error, and residual error
 |      (6) 'Total': sum total
 |
 |  vi2_attrib_uvf : pd.DataFrame, index (idx_list),
 |          columns (vi2_source_list + ['asof'])
 |      Weights of attribution of UVF forecast
 |          (of implied variance) to dynamic
 |          sources of volatility of volatility
 |          indexes
 |      Reference expression: vi2_attrib_uvf =
 |          = DFVCM_obj.indiv_var_attrib.loc[
 |              und_list, :].set_axis(idx_list, axis='index')
 |
 |  vi2_attrib_qar : pd.DataFrame, index (idx_list),
 |          columns (vi2_source_list + ['asof'])
 |      Weights of attribution of QAR forecast
 |          (of implied variance) to dynamic
 |          sources of volatility of volatility
 |          indexes
 |      Reference expression: VI2(t+1|t) =
 |          = A_qar + { B_qar (
 |            Sum[ VI(t+1-j) qc_V(t,j,k) VI(t+1-k)'; j,k=1:p ] +
 |          + Sum[ VI(t+1-j) qc_W(t,j,k) VI(t+1-k)'; j,k=1:q ] ) };
 |
 |  vi2_attrib : pd.DataFrame, index (idx_list),
 |          columns (vi2_source_list + ['asof'])
 |      Weights of attribution of forecast (of
 |          implied variance) to dynamic sources
 |          of volatility of volatility indexes
 |      Reference expression: vi2_attrib =
 |          = vi2_attrib_uvf or vi2_attrib_qar
 |
 |  vil_forecast_uvf : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |      Multi-step multivariate forecasts of volatility
 |          indexes with underlying volatility forecasts
 |          (UVF) as predictors
 |
 |  vil_forecast_qar : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |      Multi-step multivariate forecasts of volatility
 |          indexes with quadratic autoregression (QAR)
 |          equation
 |
 |  vil_forecast : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |      Multi-step multivariate forecasts of
 |          volatility indexes
 |      Reference expression: vil_forecast =
 |          = vil_forecast_uvf or vil_forecast_qar
 |
 |  Methods
 |  -------
 |
 |  For model initiation
 |      DFbVIF()
 |      DFbVIF(vol_index_dict, len_learn_window, var_order,
 |          num_factors, ar_order_idio, num_pcs, alt_ar_order,
 |          alt_num_pcs, vif_type, max_forecast_step)
 |      DFbVIF_obj.set_param(vol_index_dict, len_learn_window,
 |          var_order, num_factors, ar_order_idio, num_pcs,
 |          alt_ar_order, alt_num_pcs, vif_type, max_forecast_step)
 |      DFbVIF_obj.set_data(MTS)
 |      DFbVIF_obj.get_param(param_name_list)
 |      DFbVIF_obj.get_min_len_ts()
 |      DFbVIF_obj.get_data_info()
 |      DFbVIF_obj.get_VIL()
 |      DFbVIF_obj.get_VTS()
 |
 |  For model learning
 |      DFbVIF_obj.fit()
 |      DFbVIF_obj.get_stdev()
 |      DFbVIF_obj.get_all_var_base()
 |      DFbVIF_obj.get_all_variance()
 |      DFbVIF_obj.get_indiv_var_parts()
 |
 |  For model inference
 |      DFbVIF_obj.variance()
 |      DFbVIF_obj.get_und_variance()
 |      DFbVIF_obj.get_qar_coefs()
 |      DFbVIF_obj.get_vi2_forec()
 |      DFbVIF_obj.get_vi2_forec_ratio()
 |      DFbVIF_obj.get_vi2_attrib()
 |      DFbVIF_obj.get_vil_forecast()
 |
 |  For time stamp of model estimates
 |      DFbVIF_obj.get_asof()
 |
 |  Notes on data
 |  -------------
 |
 |  * VIL and VTS, for learning and for inference,
 |    inputs of method set_data(VIL, VTS)
 |
 |  Class DFVCM
 |  -----------
 |
 |  This class, class DFbVIF, initiates instances
 |      of "Dynamic Factor Variance-Covariance Model"
 |      (DFVCM) for analyzing and forecasting variance,
 |      covariance and autocovariance of DFM-input
 |      vector time-series stacking together underlying
 |      time-series (underlying volatility indexes) and
 |      other related vector time-series
 |
 |  For model initiation
 |      DFVCM()
 |      DFVCM(len_learn_window, var_order, num_factors,
 |          ar_order_idio, num_pcs, alt_ar_order, alt_num_pcs,
 |          max_forecast_step, target_type)
 |      DFVCM_obj.set_param(len_learn_window, var_order,
 |          num_factors, ar_order_idio, num_pcs, alt_ar_order,
 |          alt_num_pcs, max_forecast_step, target_type)
 |      DFVCM_obj.set_data(VTS)
 |      DFVCM_obj.get_param(param_name_list)
 |      DFVCM_obj.get_min_len_ts()
 |      DFVCM_obj.get_data_info()
 |
 |  For model learning
 |      DFVCM_obj.fit()
 |      DFVCM_obj.get_stdev()
 |
 |  For model inference
 |      DFVCM_obj.varcovar()
 |      DFVCM_obj.get_all_var_base()
 |      DFVCM_obj.get_all_variance()
 |      DFVCM_obj.get_indiv_var_parts()
 |
 |  For time stamp of model estimates
 |      DFVCM_obj.get_asof()
 |
 |  Additional details can be obtained from help(DFVCM)
 |
 |  Methods defined here:
 |
 |  __adjust_coefs_qar__(self)
 |      Generate additive constant, and multiplier,
 |          of value-adjustment of QAR (quadratic
 |          autoregressive) method forecasting
 |          implied variance
 |
 |      Inputs
 |      ------
 |
 |      all_step_list : list, [
 |          (- max(var_order, max_ar_order)), ...,
 |          -1, 0, 1, ..., max_forecast_step]
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted
 |
 |      und_variance : pd.DataFrame, index (idx_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted variance of VI-
 |              adjusted underlying time-series (underlying
 |              volatility indexes)
 |
 |      vi2_source_list : list, [
 |              'Common volatility',
 |              'Common serial-correlation',
 |              'Idiosyncratic volatility',
 |              'Idiosyncratic serial-correlation',
 |              'Prediction error',
 |              'Total']
 |          List of aggregated dynamic sources of volatility
 |
 |      vi2_attrib_uvf : pd.DataFrame, index (idx_list),
 |              columns (vi2_source_list + ['asof'])
 |          Weights of attribution of UVF forecast
 |              (of implied variance) to dynamic
 |              sources of volatility of volatility
 |              indexes
 |
 |      Outputs
 |      -------
 |
 |      const_qar : pd.Series, index (idx_list)
 |          Additive constant of value-adjustment
 |              of QAR (quadratic autoregressive)
 |              method forecasting implied variance
 |          Reference expression:
 |              A_qar = VI2(t) pv_und('prederr',t) Inv[ v2_und(t+1) ]
 |
 |      mult_qar : pd.Series, index (idx_list),
 |          Multiplier of value-adjustment of QAR
 |              (quadratic autoregressive) method
 |              forecasting implied variance
 |          Reference expression:
 |              B_qar = [ VI2(t) - A_qar ] Inv[ vi2_qar(t|t-1) ]
 |
 |      Function call
 |      -------------
 |
 |      self.__adjust_coefs_qar__()
 |
 |  __adjust_coefs_uvf__(self)
 |      Generate multiplier of value-adjustment
 |          of UVF (underlying volatility forecasts
 |          as predictors) method forecasting implied
 |          variance
 |
 |      Inputs
 |      ------
 |
 |      all_step_list : list, [
 |          (- max(var_order, max_ar_order)), ...,
 |          -1, 0, 1, ..., max_forecast_step]
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series
 |
 |      und_variance : pd.DataFrame, index (idx_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted variance of VI-
 |              adjusted underlying time-series (underlying
 |              volatility indexes)
 |
 |      Outputs
 |      -------
 |
 |      mult_uvf : pd.Series, index (idx_list)
 |          Multiplier of value-adjustment of UVF
 |              (underlying volatility forecasts
 |              as predictors) method forecasting
 |              implied variance
 |          Reference expression:
 |              B_uvf = VI2(t) Inv[ v2_und(t-0) ]
 |
 |      Function call
 |      -------------
 |
 |      self.__adjust_coefs_uvf__()
 |
 |  __data_holder__(self)
 |      Initialize or reset data and related items
 |
 |      Function call
 |      -------------
 |
 |      self.__data_holder__()
 |
 |  __dfvcm_object__(self)
 |      Initialize DFVCM model object
 |
 |      Outputs
 |      -------
 |
 |      dfvcm : object
 |          DFVCM model object, an instance of DFVCM class
 |
 |      Function call
 |      -------------
 |
 |      self.__dfvcm_object__()
 |
 |  __have_VIF__(self)
 |      Check availability or completeness of data objects
 |          of volatility index forecasts
 |
 |      Function call
 |      -------------
 |
 |      self.__have_VIF__()
 |
 |  __have_data__(self)
 |      Check availability of published and observed
 |          vector time-series (VIL, VTS) data
 |
 |      Function call
 |      -------------
 |
 |      self.__have_data__()
 |
 |  __impl_var_holder__(self)
 |      Set up data holder objects of multi-step multivariate
 |          forecasts of implied variance and volatility index,
 |          and associated dynamic volatility attributions
 |
 |      Inputs
 |      ------
 |
 |      vif_type : str, in ('uvf', 'qar')
 |          Type of volatility index forecasts (VIF)
 |              and dynamic volatility attributions
 |              to be generated
 |          Type of VIF
 |              'uvf', UVF forecasts and attributions
 |              'qar', QAR forecasts and attributions
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |          List of variance or covariance forecast steps
 |          Note: step = 0 for nowcast or estimate
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted
 |
 |      vi2_source_list : list, [
 |              'Common volatility',
 |              'Common serial-correlation',
 |              'Idiosyncratic volatility',
 |              'Idiosyncratic serial-correlation',
 |              'Prediction error',
 |              'Total']
 |          List of aggregated dynamic sources of volatility
 |
 |      Outputs
 |      -------
 |
 |      vi2_forec_uvf : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |
 |      vi2_forec_qar : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |
 |      vi2_attrib_uvf : pd.DataFrame, index (idx_list),
 |          columns (vi2_source_list + ['asof'])
 |
 |      vi2_attrib_qar : pd.DataFrame, index (idx_list),
 |          columns (vi2_source_list + ['asof'])
 |
 |      vil_forecast_uvf : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |
 |      vil_forecast_qar : pd.DataFrame, index (idx_list),
 |          columns (vcf_step_list + ['asof'])
 |
 |      Function call
 |      -------------
 |
 |      self.__impl_var_holder__()
 |
 |  __impl_variance_qar__(self)
 |      Generate multi-step multivariate forecasts
 |          of implied variances, and of volatility
 |          indexes, with quadratic autoregression
 |          (QAR) equation
 |
 |      Inputs
 |      ------
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted
 |
 |      const_qar : pd.Series, index (idx_list)
 |          Additive constant of value-adjustment
 |
 |      mult_qar : pd.Series, index (idx_list),
 |          Multiplier of value-adjustment
 |
 |      stepwise_vi2f_qar : pd.DataFrame,
 |              index (idx_list),
 |              columns (vi2f_step_list)
 |          Multi-step multivariate step-wise
 |              QAR forecasts of implied variances
 |          Example:
 |              vi2_forec_qar = stepwise_vi2f_qar
 |
 |      Outputs
 |      -------
 |
 |      vi2_forec_qar : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances with quadratic autoregression
 |              (QAR) equation
 |          Reference expression:
 |              VI2(t+s|t) = A_qar + { B_qar (
 |                Sum[ VI(t+s-j) qc_V(t,j,k) VI(t+s-k)'; j,k=1:p ]
 |              + Sum[ VI(t+s-j) qc_W(t,j,k) VI(t+s-k)'; j,k=1:q ] ) };
 |
 |      vil_forecast_qar : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of volatility
 |              indexes with quadratic autoregression (QAR)
 |              equation
 |
 |      Function call
 |      -------------
 |
 |      self.__impl_variance_qar__()
 |
 |  __impl_variance_uvf__(self)
 |      Generate multi-step multivariate forecasts
 |          of implied variances, and volatility indexes,
 |          with underlying volatility forecasts (UVF)
 |          as predictors
 |
 |      Inputs
 |      ------
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |          List of variance or covariance forecast steps
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted
 |
 |      all_step_list : list, [
 |          (- max(var_order, max_ar_order)), ...,
 |          -1, 0, 1, ..., max_forecast_step]
 |
 |      und_variance : pd.DataFrame, index (idx_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted variance of VI-
 |              adjusted underlying time-series (underlying
 |              volatility indexes)
 |
 |      mult_uvf : pd.Series, index (idx_list)
 |          Multiplier of value-adjustment of UVF
 |              (underlying volatility forecasts
 |              as predictors) method forecasting
 |              implied variance
 |
 |      Outputs
 |      -------
 |
 |      vi2_forec_uvf : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances with underlying volatility
 |              forecasts (UVF) as predictors
 |          Reference expression:
 |              VI2(t+s|t) = B_uvf(t) v2_und(t+s|t)
 |
 |      vil_forecast_uvf : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of volatility
 |              indexes with underlying volatility forecasts
 |              (UVF) as predictors
 |
 |      Function call
 |      -------------
 |
 |      self.__impl_variance_uvf__()
 |
 |  __init__(self, vol_index_dict=None, len_learn_window=None, var_order=1, num_factors=1, ar_order_idio=1, num_pcs=1, alt_ar_order={}, alt_num_pcs={}, vif_type='', max_forecast_step=1)
 |      Initialize object self
 |
 |      Learning parameters
 |      -------------------
 |
 |      vol_index_dict : dict,
 |              keys (vi_list),
 |                  vi_list : list (vi1, vi2, ...)
 |              values (sub(ts_list) or =None)
 |                  ts_list : list (ts1, ts2, ...)
 |          dict-Type list of key-value pairs of volatility
 |              indexes (keys, vi_list) and, if to be
 |              forecasted, correspondent underlying time-
 |              series (values, sub(ts_list))
 |          Reference expression:
 |              und_list = [v for v in obj.values() if (v in ts_list)]
 |              idx_list = [k for k in vi_list if (obj[k] in und_list)]
 |              und_list = [obj[k] for k in idx_list]
 |
 |      len_learn_window : int >> 1
 |          Length of trailing time window of data points
 |              for model learning
 |
 |      var_order : int >= 1
 |          Vector autoregressive (VAR) order, p, of dynamic
 |              factor model for common components of vector
 |              time-series
 |          Notes:
 |              var_order <= len_learn_window
 |              len_ts >= len_learn_window + (3 var_order)
 |
 |      num_factors : int >= 1
 |          Number of factors of dynamic factor model for
 |              common components of vector time-series
 |          Notes:
 |              num_factors < min(len_learn_window, num_ts)
 |
 |      ar_order_idio : int >= 1
 |          Autoregressive (AR) order, q, of AR model for
 |              idiosyncratic components of individual time-
 |              series, with q applying to all time-series
 |              other than those specified, if any, in dict-
 |              type parameter alt_ar_order
 |          Notes:
 |              ar_order_idio <= len_learn_window
 |              len_ts >= len_learn_window + (2 ar_order_idio)
 |
 |      num_pcs : int >= 1
 |          Number of principal components (PCs), m, of PC-
 |              based AR model for idiosyncratic components
 |              of individual time-series, with m applying
 |              to all time-series other than those specified,
 |              if any, in dict-type parameter alt_num_pcs
 |          Notes:
 |              num_pcs < ar_order_idio
 |
 |      alt_ar_order : dict {ts1id: q1, ts2id: q2, ...} or {}
 |          Autoregressive (AR) orders, q1, q2, ..., if any,
 |              applying to idiosyncratic components of
 |              specified time-series ts1, ts2, ...
 |          Notes:
 |              ts1id, ts2id, ...: in VTS.index, labels of
 |              specified time-series ts1, ts2, ...
 |
 |      alt_num_pcs : dict {ts1id: m1, ts2id: m2, ...} or {}
 |          Numbers of principal components (PCs), m1, m2,
 |              ..., if any, applying to idiosyncratic
 |              components of specified time-series ts1,
 |              ts2, ...
 |          Notes:
 |              ts1id, ts2id, ...: in VTS.index, labels of
 |              specified time-series ts1, ts2, ...
 |
 |      Inference parameters
 |      --------------------
 |
 |      vif_type : str, in ('uvf', 'qar')
 |          Type of volatility index forecasts (VIF)
 |              and dynamic volatility attributions
 |              to be generated
 |          Type of VIF
 |              'uvf', UVF forecasts and attributions
 |              'qar', QAR forecasts and attributions
 |
 |      max_forecast_step : int >= 1
 |          Maximum number of forecasting steps
 |              of volatility (variance-covariance)
 |              forecasts
 |
 |      Returns
 |      -------
 |
 |      self : object
 |          Class instance itself
 |
 |      Object initiation call
 |      ----------------------
 |
 |      DFbVIF_obj = DFbVIF()
 |
 |      DFbVIF_obj = DFbVIF(
 |          param_name=param_value)
 |
 |      DFbVIF_obj = DFbVIF(
 |          param1_name=param1_value,
 |          param2_name=param2_value, ...)
 |
 |      DFbVIF_obj = DFbVIF(
 |          vol_index_dict=vol_index_dict,
 |          len_learn_window=len_learn_window,
 |          var_order=var_order,
 |          num_factors=num_factors,
 |          ar_order_idio=ar_order_idio,
 |          num_pcs=num_pcs,
 |          alt_ar_order=alt_ar_order,
 |          alt_num_pcs=alt_num_pcs,
 |          vif_type=vif_type,
 |          max_forecast_step=max_forecast_step)
 |
 |  __is_fit__(self)
 |      Check whether DFbVIF model is estimated with method
 |          self.fit()
 |
 |      Function call
 |      -------------
 |
 |      self.__is_fit__()
 |
 |  __min_vi2f_ratio__(self)
 |      Generate minimum realized s-step ratio of implied
 |          vairiance, VI2(t) Inv( VI2(t-s) ), serving as
 |          lower limit of forecasted implied variance over
 |          last observed value, VI2(t+s|t) Inv( VI2(t) )
 |
 |      Inputs
 |      ------
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |          List of variance or covariance forecast steps
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted
 |
 |      asof_list : list
 |              ([t_stamp_1, t_stamp_2, ..., t_stamp_T])
 |          List of as-of time-stamps of observed (DFM-input
 |              vector) time-series, as list of columns axis
 |              of VIL or VTS DataFrame
 |
 |      Outputs
 |      -------
 |
 |      min_vi2f_ratio : pd.DataFrame,
 |              index (idx_list),
 |              columns (vcf_step_list)
 |          Minimum realized s-step ratio of implied
 |              vairiance, VI2(t) Inv( VI2(t-s) ),
 |              serving as lower limit of forecasted
 |              implied variance over last observed
 |              value, VI2(t+s|t) Inv( VI2(t) )
 |
 |      Function call
 |      -------------
 |
 |      self.__min_vi2f_ratio__()
 |
 |  __qar_coef_comm_idio__(self)
 |      Generate diagonal common, and idiosyncratic, component
 |          coefficient matrix of pair of lags in quadratic
 |          AR (QAR) equation predicting implied variance
 |          by quadratic combination of most recent volatility
 |          index values
 |
 |      Inputs
 |      ------
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |
 |      comm_lagtup_list : list,
 |          [(1, 1), (1, 2), ..., (j, k), ..., (p, p)]
 |              j=1,2,...,p; k=j,j+1,...,p
 |
 |      idio_lagtup_list : list,
 |          [(1, 1), (1, 2), ..., (j, k), ..., (q, q)]
 |              j=1,2,...,q; k=j,j+1,...,q
 |
 |      indiv_var_parts : dict, keys ('comm', 'idio', 'asof')
 |              obj['comm'] : pd.DataFrame, index (ts_list),
 |                  columns (comm_lagtub_list + ['pred_err'])
 |              obj['idio'] : pd.DataFrame, index (ts_list),
 |                  columns (idio_lagtub_list + ['pred_err'])
 |          Reference expression of 'comm'
 |              diag( X0 diag( A(j) V(t+1-j, t+1-k) A(k)' ) X0' );
 |              diag( X0 Rv(t) X0' );
 |                  for j = 1,2,...,p, k = 1,2,...,p
 |          Reference expression of 'idio'
 |              D(j) W(t+1-j, t+1-k) D(k)';
 |              Re(t) + Rr(t);
 |                  for j = 1,2,...,q, k = 1,2,...,q
 |
 |      all_variance : pd.DataFrame, index (ts_list),
 |          columns (all_step_list + ['asof'])
 |
 |      und_list : list
 |          Reference expression:
 |              und_list[j] = vol_index_dict[idx_list[j]]
 |                  j = 1,2,...,num_idx
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted
 |
 |      Outputs
 |      -------
 |
 |      qar_coef_comm : pd.DataFrame, index (idx_list),
 |              columns (comm_lagtup_list + ['asof'])
 |          Diagonal factor-based QAR coefficient
 |              matrixes in 1-step forecast of variance
 |              of underlying time-series
 |          Reference expression:
 |              [ Inv(v1_und(t+1-j)) dp_und('comm',t,j,k)
 |                  Inv(v1_und(t+1-k))' ]
 |          Note of QAR:
 |              factor-explained parts of variance of
 |              underlying time-series are additive terms
 |              of quadratic autoregressive (QAR) equation
 |
 |      qar_coef_idio : pd.DataFrame, index (idx_list),
 |              columns (idio_lagtup_list + ['asof'])
 |          Diagonal UDC-based QAR coefficient
 |              matrixes in 1-step forecast of
 |              variance of underlying time-series
 |          Reference expression:
 |              [ Inv(v1_und(t+1-j)) dp_und('idio',t,j,k)
 |                  Inv(v1_und(t+1-k))' ]
 |          Note of QAR:
 |              UDC-explained parts of variance of under-
 |              lying time-series are additive terms of
 |              quadratic autoregressive (QAR) equation
 |
 |      Function call
 |      -------------
 |
 |      self.__qar_coef_comm_idio__()
 |
 |  __qar_var_attrib__(self)
 |      Generate weights of attribution of QAR forecast
 |          (of implied variance) to dynamic sources
 |          of volatility of volatility indexes
 |
 |      Inputs
 |      ------
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index
 |
 |      comm_lagtup_list : list,
 |          [(1, 1), (1, 2), ..., (j, k), ..., (p, p)]
 |              j=1,2,...,p; k=j,j+1,...,p
 |                  p = var_order
 |
 |      idio_lagtup_list : list,
 |          [(1, 1), (1, 2), ..., (j, k), ..., (q, q)]
 |              j=1,2,...,q; k=j,j+1,...,q
 |                  q = max_ar_order
 |
 |      qar_coef_comm : pd.DataFrame, index (idx_list),
 |              columns (comm_lagtup_list + ['asof'])
 |          Reference expression:
 |              [ Inv(v1_und(t+1-j)) dp_und('comm',t,j,k)
 |                  Inv(v1_und(t+1-k))' ]
 |
 |      qar_coef_idio : pd.DataFrame, index (idx_list),
 |              columns (idio_lagtup_list + ['asof'])
 |          Reference expression:
 |              [ Inv(v1_und(t+1-j)) dp_und('idio',t,j,k)
 |                  Inv(v1_und(t+1-k))' ]
 |
 |      const_qar : pd.Series, index (idx_list)
 |          Additive constant of value-adjustment
 |              of QAR method
 |
 |      mult_qar : pd.Series, index (idx_list),
 |          Multiplier of value-adjustment of QAR
 |              method
 |
 |      vi2_source_list : list, [
 |              'Common volatility',
 |              'Common serial-correlation',
 |              'Idiosyncratic volatility',
 |              'Idiosyncratic serial-correlation',
 |              'Prediction error',
 |              'Total']
 |          List of aggregated dynamic sources of volatility
 |              measured by contributions to (UVF or QAR)
 |              forecasts of implied variance
 |
 |      Outputs
 |      -------
 |
 |      vi2_attrib_qar : pd.DataFrame, index (idx_list),
 |              columns (vi2_source_list + ['asof'])
 |          Weights of attribution of QAR forecast
 |              (of implied variance) to dynamic
 |              sources of volatility of volatility
 |              indexes
 |          Reference expression: VI2(t+1|t) =
 |              = A_qar + { B_qar (
 |                Sum[ VI(t+1-j) qc_V(t,j,k) VI(t+1-k)'; j,k=1:p ] +
 |              + Sum[ VI(t+1-j) qc_W(t,j,k) VI(t+1-k)'; j,k=1:q ] ) };
 |
 |      Function call
 |      -------------
 |
 |      self.__qar_var_attrib__()
 |
 |  __stepwise_vi2f_qar__(self, vil_data, vi2f_step_list, const_vec, mult_vec)
 |      Generate multi-step multivariate step-wise forecasts
 |          of implied variances with quadratic autoregression
 |          (QAR) equation
 |
 |      Arguments
 |      ---------
 |
 |      vil_data : pandas.DataFrame, index (idx_list),
 |              columns (asof_list)
 |          Example:
 |              vil_data = VIL.loc[idx_list, asof_range]
 |
 |      vi2f_step_list : list,
 |              [0, 1, ..., max_vi2f_step]
 |          Examples:
 |              vi2f_step_list = [0, 1]
 |              vi2f_step_list = vcf_step_list
 |
 |      const_vec : pd.Series, index (idx_list)
 |          Additive constant of value-adjustment
 |              of QAR method forecasting implied
 |              variance
 |          Example:
 |              const_vec = const_qar
 |
 |      mult_vec : pd.Series, index (idx_list),
 |          Multiplier of value-adjustment of QAR
 |              method forecasting implied variance
 |          Example:
 |              mult_vec = mult_qar
 |
 |      Inputs
 |      ------
 |
 |      var_order : int >= 1
 |
 |      max_ar_order : int >= 1
 |
 |      all_step_list : list, [
 |          (- max(var_order, max_ar_order)), ...,
 |          -1, 0, 1, ..., max_forecast_step]
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted
 |
 |      comm_lagtup_list : list,
 |              [(1, 1), (1, 2), ..., (j, k), ..., (p, p)]
 |                  j=1,2,...,p; k=j,j+1,...,p
 |          List of time lag tuples of common components
 |
 |      idio_lagtup_list : list,
 |              [(1, 1), (1, 2), ..., (j, k), ..., (q, q)]
 |                  j=1,2,...,q; k=j,j+1,...,q
 |          List of time lag tuples of idiosync components
 |
 |      qar_coef_comm : pd.DataFrame, index (idx_list),
 |              columns (comm_lagtup_list + ['asof'])
 |          Reference expression:
 |              [ Inv(v1_und(t+1-j)) dp_und('comm',t,j,k)
 |                  Inv(v1_und(t+1-k))' ]
 |
 |      qar_coef_idio : pd.DataFrame, index (idx_list),
 |              columns (idio_lagtup_list + ['asof'])
 |          Reference expression:
 |              [ Inv(v1_und(t+1-j)) dp_und('idio',t,j,k)
 |                  Inv(v1_und(t+1-k))' ]
 |
 |      min_vi2f_ratio : pd.DataFrame,
 |              index (idx_list),
 |              columns (vcf_step_list)
 |          Minimum realized s-step ratio of implied
 |              vairiance, VI2(t) Inv( VI2(t-s) )
 |
 |      Returns
 |      -------
 |
 |      stepwise_vi2f_qar : pd.DataFrame,
 |              index (idx_list),
 |              columns (vi2f_step_list)
 |          Multi-step multivariate step-wise forecasts
 |              of implied variances with quadratic
 |              autoregression (QAR) equation
 |          Reference expression:
 |              VI2(t+s|t) = A_qar + { B_qar (
 |                Sum[ VI(t+s-j) qc_V(t,j,k) VI(t+s-k)'; j,k=1:p ]
 |              + Sum[ VI(t+s-j) qc_W(t,j,k) VI(t+s-k)'; j,k=1:q ] ) };
 |          Example:
 |              vi2_forec_qar = stepwise_vi2f_qar
 |
 |      Function call
 |      -------------
 |
 |      stepwise_vi2f_qar = self.__stepwise_vi2f_qar__(
 |          vil_data, vi2f_step_list, const_vec, mult_vec)
 |
 |  __take_data__(self, MTS)
 |      Inspect, and take valid portion of, 3-in-1 input
 |          time-series data MTS including volatility
 |          index level vector time-series data (VIL)
 |          and DFM-input (underlying and information-
 |          enhancing) vector time-series data (VTS)
 |
 |      Arguments
 |      ---------
 |
 |      MTS : pandas.DataFrame,
 |              index (vi_list + ts_list),
 |              columns (asof_list)
 |          Multiple time-series data set
 |
 |      Inputs
 |      ------
 |
 |      vol_index_dict : dict,
 |              keys (vi_list),
 |                  vi_list : list (vi1, vi2, ...)
 |              values (sub(ts_list) or =None)
 |                  ts_list : list (ts1, ts2, ...)
 |          dict-Type list of key-value pairs {volatility
 |              indexes: underlying time-series}
 |          Reference expression:
 |              und_list = [v for v in obj.values() if (v in ts_list)]
 |              idx_list = [k for k in vi_list if (obj[k] in und_list)]
 |              und_list = [obj[k] for k in idx_list]
 |
 |      Outputs
 |      -------
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series
 |
 |      VTS : pandas.DataFrame, index (ts_list),
 |              columns (asof_list)
 |          DFM-input vector time-series
 |
 |      vi_list : list
 |
 |      ts_list : list (ts_1, ts_2, ...)
 |
 |      asof_list : list (t_stamp_1, t_stamp_2, ..., t_stamp_T)
 |
 |      num_vi : int >= 1
 |
 |      num_ts : int >= 1
 |
 |      len_ts : int > 1
 |
 |      idx_list : list (vi_1, vi_2, ...)
 |
 |      und_list : list (ts_1, ts_2, ...)
 |
 |      Function call
 |      -------------
 |
 |      self.__take_data__(MTS)
 |
 |  __take_param__(self, vol_index_dict=None, len_learn_window=None, var_order=None, num_factors=None, ar_order_idio=None, num_pcs=None, alt_ar_order=None, alt_num_pcs=None, vif_type=None, max_forecast_step=None)
 |      Take prameter values
 |
 |      Arguments
 |      ---------
 |
 |      vol_index_dict : dict
 |      len_learn_window : int
 |
 |      var_order : int
 |      num_factors : int
 |
 |      ar_order_idio : int
 |      num_pcs : int
 |      alt_ar_order : dict
 |      alt_num_pcs : dict
 |
 |      vif_type : str
 |      max_forecast_step : int
 |
 |      Function call
 |      -------------
 |
 |      self.__take_param__(
 |          vol_index_dict=vol_index_dict,
 |          len_learn_window=len_learn_window,
 |          var_order=var_order,
 |          num_factors=num_factors,
 |          ar_order_idio=ar_order_idio,
 |          num_pcs=num_pcs,
 |          alt_ar_order=alt_ar_order,
 |          alt_num_pcs=alt_num_pcs,
 |          vif_type=vif_type,
 |          max_forecast_step=max_forecast_step)
 |
 |  __und_variance__(self)
 |      Generate all estimated and forecasted variance
 |          of underlying time-series
 |
 |      Inputs
 |      ------
 |
 |      und_list : list
 |          Reference expression:
 |              und_list[j] = vol_index_dict[idx_list[j]]
 |                  j = 1,2,...,num_idx
 |
 |      all_variance : pd.DataFrame, index (ts_list),
 |          columns (all_step_list + ['asof'])
 |
 |      Outputs
 |      -------
 |
 |      und_variance : pd.DataFrame, index (idx_list),
 |              columns (all_step_list + ['asof'])
 |          Reference expression:
 |              diag( X0 V(t+s-j) X0' ) + W(t+s-j)) + Rr(t)
 |                   j,s = 0,1,2,...
 |
 |      Function call
 |      -------------
 |
 |      self.__und_variance__()
 |
 |  __uvf_var_attrib__(self)
 |      Generate weights of attribution of UVF forecast
 |          (of implied variance) to dynamic sources
 |          of volatility of volatility indexes
 |
 |      Inputs
 |      ------
 |
 |      und_list : list
 |          Reference expression:
 |              und_list[j] = vol_index_dict[idx_list[j]]
 |                  j = 1,2,...,num_idx
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted
 |
 |      var_source_list : list, (vi2_source_list)
 |          List of aggregated dynamic sources of volatility
 |              measured by contributions to forecasts of
 |              variance
 |
 |      indiv_var_attrib : pd.DataFrame, index (ts_list),
 |              columns (var_source_list + ['asof'])
 |          Weights of attribution of individual variance
 |              forecast to dynamic sources of volatility
 |              of individual time-series of observed
 |              vector time-series
 |
 |      vi2_source_list : list, [
 |              'Common volatility',
 |              'Common serial-correlation',
 |              'Idiosyncratic volatility',
 |              'Idiosyncratic serial-correlation',
 |              'Prediction error',
 |              'Total']
 |          List of aggregated dynamic sources of volatility
 |
 |      Outputs
 |      -------
 |
 |      vi2_attrib_uvf : pd.DataFrame, index (idx_list),
 |              columns (vi2_source_list + ['asof'])
 |          Weights of attribution of UVF forecast
 |              (of implied variance) to dynamic
 |              sources of volatility of volatility
 |              indexes
 |          Reference expression: vi2_attrib_uvf =
 |              = DFVCM_obj.indiv_var_attrib.loc[
 |                  und_list, :].set_axis(idx_list, axis='index')
 |
 |      Function call
 |      -------------
 |
 |      self.__uvf_var_attrib__()
 |
 |  fit(self)
 |      Estimate volatility model of DFM-input vector time-
 |          series (underlying vector time-series and related
 |          vector time-series)
 |
 |      Inputs
 |      ------
 |
 |      VTS : pandas.DataFrame, index (ts_list),
 |              columns (asof_list)
 |          DFM-input vector time-series (of logarithmic/
 |              percent changes in prices/values/indexes)
 |              including underlying vector time-series
 |              (underlying volatility indexes) and other
 |              information-enhancing vector time-series
 |              (dynamically correlated with underlying
 |              ones), as input data for DFbVIF model
 |              learning and inference
 |          Row time-series of column vector with first
 |              column as oldest and last one as latest
 |
 |      ts_list : list ([ts_1, ts_2, ...])
 |          List of name/symbol/label strings of individual
 |              time-series of DFM-input vector time-series,
 |              as list of index axis of VTS DataFrame
 |
 |      asof_list : list
 |              ([t_stamp_1, t_stamp_2, ..., t_stamp_T])
 |          List of as-of time-stamps of observed (DFM-input
 |              vector) time-series, as list of columns axis
 |              of VIL or VTS DataFrame
 |
 |      dfvcm : object
 |          DFVCM model object, an instance of DFVCM class
 |
 |      Outputs
 |      -------
 |
 |      all_variance : pd.DataFrame, index (ts_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted variance of
 |              DFM-inputd vector time-series, estimated
 |              and forecasted by DFM-based volatility
 |              forecast model DFVCM
 |          Reference expression:
 |              diag( X0 V(t+s-j) X0' ) + W(t+s-j)) + Rr(t)
 |                  j,s = 0,1,2,...
 |
 |      indiv_var_parts : dict, keys ('comm', 'idio', 'asof')
 |              obj['comm'] : pd.DataFrame, index (ts_list),
 |                  columns (comm_lagtub_list + ['pred_err'])
 |              obj['idio'] : pd.DataFrame, index (ts_list),
 |                  columns (idio_lagtub_list + ['pred_err'])
 |          Parts of variance of individual time-series of
 |              DFM-input vector time-series, predicted by
 |              dynamic common factors for obj['comm'], and
 |              by idiosycratic UDC for obj['idio']
 |          Reference expression of 'comm'
 |              diag( X0 diag( A(j) V(t+1-j, t+1-k) A(k)' ) X0' );
 |              diag( X0 Rv(t) X0' );
 |                  for j = 1,2,...,p, k = 1,2,...,p
 |          Reference expression of 'idio'
 |              D(j) W(t+1-j, t+1-k) D(k)';
 |              Re(t) + Rr(t);
 |                  for j = 1,2,...,q, k = 1,2,...,q
 |
 |      Function call
 |      -------------
 |
 |      self.fit()
 |
 |      DFbVIF_obj.fit()
 |
 |  get_VIL(self)
 |      Get volatility index level vector time-series VIL
 |
 |      Returns
 |      -------
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series,
 |              as input data for DFbVIF model learning
 |              and inference
 |          Row time-series of column vector with first
 |              column as oldest and last one as latest
 |
 |      Function call
 |      -------------
 |
 |      VIL = DFbVIF_obj.get_VIL()
 |
 |  get_VTS(self)
 |      Get DFM-import vector time-series VTS
 |
 |      Returns
 |      -------
 |
 |      VTS : pandas.DataFrame, index (ts_list),
 |              columns (asof_list)
 |          DFM-input vector time-series (of logarithmic/
 |              percent changes in prices/values/indexes)
 |              including underlying vector time-series
 |              (underlying volatility indexes) and other
 |              information-enhancing vector time-series
 |              (dynamically correlated with underlying
 |              ones), as input data for DFbVIF model
 |              learning and inference
 |          Row time-series of column vector with first
 |              column as oldest and last one as latest
 |
 |      Function call
 |      -------------
 |
 |      VTS = DFbVIF_obj.get_VTS()
 |
 |  get_all_var_base(self)
 |      Get all estimated and forecasted base-case variance
 |          of base-case time-series of DFM-input vector
 |          time-series
 |
 |      Inputs
 |      ------
 |
 |      all_step_list : list, [
 |              (- max(var_order, max_ar_order)), ...,
 |              -1, 0, 1, ..., max_forecast_step]
 |          List of time steps of estimated (step <= 0)
 |              and forecasted (step >= 1) variance data
 |
 |      Returns
 |      -------
 |
 |      all_var_base : pd.DataFrame, index (ts_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted base-case variance
 |              of base-case time-series of DFM-input vector
 |              time-series, estimated and forecasted by
 |              DFM-based volatility forecast model DFVCM
 |          Reference expression:
 |              diag( X0 V(t+s-j) X0' ) + W(t+s-j)) + Rr(t)
 |                  j,s = 0,1,2,...
 |
 |      Function call
 |      -------------
 |
 |      all_var_base = DFbVIF_obj.get_all_var_base()
 |
 |  get_all_variance(self)
 |      Get all estimated and forecasted variance
 |          of DFM-input vector time-series
 |
 |      Inputs
 |      ------
 |
 |      all_step_list : list, [
 |              (- max(var_order, max_ar_order)), ...,
 |              -1, 0, 1, ..., max_forecast_step]
 |          List of time steps of estimated (step <= 0)
 |              and forecasted (step >= 1) variance data
 |
 |      Returns
 |      -------
 |
 |      all_variance : pd.DataFrame, index (ts_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted variance of
 |              DFM-inputd vector time-series, estimated
 |              and forecasted by DFM-based volatility
 |              forecast model DFVCM
 |          Reference expression:
 |              diag( X0 V(t+s-j) X0' ) + W(t+s-j)) + Rr(t)
 |                  j,s = 0,1,2,...
 |
 |      Function call
 |      -------------
 |
 |      all_variance = DFbVIF_obj.get_all_variance()
 |
 |  get_asof(self)
 |      Get as-of times of estimates
 |          by model learning and for model inference
 |
 |      Returns
 |      -------
 |
 |      asof : time-stamp object
 |          Last time-stamp of observed vector time-series data
 |              utilized in estimation of values in object obj
 |          Examples:
 |              obj['asof'] = asof
 |                  when isinstance(obj, type(dict()))
 |              obj.loc['asof'] = asof
 |                  when isinstance(obj, type(pd.Series()))
 |              obj.loc[:, 'asof'] = asof
 |                  when isinstance(obj, type(pd.DataFrame()))
 |              obj.name = asof
 |                  when isinstance(obj, type(pd.Series()))
 |
 |      Function call
 |      -------------
 |
 |      asof = DFbVIF_obj.get_asof()
 |
 |  get_data_info(self)
 |      Generate summary descriptions of published and
 |          observed vector time-series (VIL and VTS)
 |          data
 |
 |      Returns
 |      -------
 |
 |      vi_list_input : list
 |
 |      ts_list_input : list
 |
 |      asof_list_input : list
 |
 |      num_vi_input : int >= 1
 |
 |      num_ts_input : int >= 1
 |
 |      len_ts_input : int > 1
 |
 |      vi_list : list
 |          List of name/symbol/label strings of multiple
 |              volatility index time-series, as list of
 |              index axis of VIL DataFrame
 |
 |      ts_list : list ([ts_1, ts_2, ...])
 |          List of name/symbol/label strings of individual
 |              time-series of DFM-input vector time-series,
 |              as list of index axis of VTS DataFrame
 |
 |      asof_list : list
 |              ([t_stamp_1, t_stamp_2, ..., t_stamp_T])
 |          List of as-of time-stamps of observed (DFM-input
 |              vector) time-series, as list of columns axis
 |              of VIL or VTS DataFrame
 |
 |      num_vi : int >= 1
 |          Number of volatility indexes = len(vi_list)
 |
 |      num_ts : int >= 1
 |          Number of observed time-series
 |              = len(ts_list)
 |
 |      len_ts : int > 1
 |          Length of observed (vector) time-series
 |              = len(asof_list)
 |          Note: len_ts >= len_learn_window + (3 var_order)
 |
 |      data_info_dict : dict
 |          dict Type summary description of published and
 |              observed vector time-series (VIL and VTS)
 |              data
 |
 |      Function call
 |      -------------
 |
 |      (vi_list_input, ts_list_input, asof_list_input,
 |          num_vi_input, num_ts_input, len_ts_input,
 |          vi_list, ts_list, asof_list, num_vi, num_ts,
 |          len_ts, data_info_dict) = (
 |          DFbVIF_obj.get_data_info())
 |
 |  get_indiv_var_parts(self)
 |      Get parts of variance of individual time-series
 |          of DFM-input vector time-series, predicted
 |          by dynamic common factors and by idiosycratic
 |          UDCs of DFM-input vector time-series
 |
 |      Inputs
 |      ------
 |
 |      comm_lagtup_list : list,
 |              [(1, 1), (1, 2), ..., (j, k), ..., (p, p)]
 |                  j=1,2,...,p; k=j,j+1,...,p
 |          List of time lag tuples of common components
 |              of estimated and forecasted quadratic VAR
 |              terms, with p = var_order
 |
 |      idio_lagtup_list : list,
 |              [(1, 1), (1, 2), ..., (j, k), ..., (q, q)]
 |                  j=1,2,...,q; k=j,j+1,...,q
 |          List of time lag tuples of idiosyncratic
 |              components of estimated and forecasted
 |              quadratic VAR terms, with q = max_ar_order
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |          List of variance or covariance forecast steps,
 |              in multi-step forecasts of variance, covariance
 |              or autocovariance of vector time-series
 |          Note: step = 0 for nowcast or estimate
 |
 |      Returns
 |      -------
 |
 |      indiv_var_parts : dict, keys ('comm', 'idio', 'asof')
 |              obj['comm'] : pd.DataFrame, index (ts_list),
 |                  columns (comm_lagtub_list + ['pred_err'])
 |              obj['idio'] : pd.DataFrame, index (ts_list),
 |                  columns (idio_lagtub_list + ['pred_err'])
 |          Parts of variance of individual time-series of
 |              DFM-input vector time-series, predicted by
 |              dynamic common factors for obj['comm'], and
 |              by idiosycratic UDC for obj['idio']
 |          Reference expression of 'comm'
 |              diag( X0 diag( A(j) V(t+1-j, t+1-k) A(k)' ) X0' );
 |              diag( X0 Rv(t) X0' );
 |                  for j = 1,2,...,p, k = 1,2,...,p
 |          Reference expression of 'idio'
 |              D(j) W(t+1-j, t+1-k) D(k)';
 |              Re(t) + Rr(t);
 |                  for j = 1,2,...,q, k = 1,2,...,q
 |
 |      Function call
 |      -------------
 |
 |      indiv_var_parts = DFbVIF_obj.get_indiv_var_parts()
 |
 |  get_min_len_ts(self)
 |      Get minimum length of time-series to satisfy parameters
 |          of vector autoregressive model analysis
 |
 |      Returns
 |      -------
 |
 |      min_len_ts : int
 |          Minimum length of time-series for VAR analysis
 |
 |      Function call
 |      -------------
 |
 |      min_len_ts = DFbVIF_obj.get_min_len_ts()
 |
 |  get_param(self, param_name_list)
 |      Get values of specified parameters
 |
 |      Arguments
 |      ---------
 |
 |      param_name_list : list [str]
 |          list of names of parameters
 |
 |      Returns
 |      -------
 |
 |      param_dict : dict {str: obj}
 |          dict of name and value of specified parameters
 |
 |      Function call
 |      -------------
 |
 |      param_dict = DFbVIF_obj.get_param(param_name_list)
 |
 |  get_qar_coefs(self)
 |      Get diagonal matrixes of factor- and UDC-based
 |          quadratic autoregressive (QAR) coefficients,
 |          get additive constant and multiplier of
 |          value-adjustment of QAR method, and get
 |          ninimum realized s-step ratio of implied
 |          vairiance
 |
 |      Returns
 |      -------
 |
 |      qar_coef_comm : pd.DataFrame, index (idx_list),
 |              columns (comm_lagtup_list + ['asof'])
 |          Diagonal factor-based QAR coefficient
 |              matrixes in 1-step forecast of variance
 |              of underlying time-series
 |          Reference expression:
 |              [ Inv(v1_und(t+1-j)) dp_und('comm',t,j,k)
 |                  Inv(v1_und(t+1-k))' ]
 |          Note of QAR:
 |              factor-explained parts of variance of
 |              underlying time-series are additive terms
 |              of quadratic autoregressive (QAR) equation
 |
 |      qar_coef_idio : pd.DataFrame, index (idx_list),
 |              columns (idio_lagtup_list + ['asof'])
 |          Diagonal UDC-based QAR coefficient
 |              matrixes in 1-step forecast of
 |              variance of underlying time-series
 |          Reference expression:
 |              [ Inv(v1_und(t+1-j)) dp_und('idio',t,j,k)
 |                  Inv(v1_und(t+1-k))' ]
 |          Note of QAR:
 |              UDC-explained parts of variance of under-
 |              lying time-series are additive terms of
 |              quadratic autoregressive (QAR) equation
 |
 |      const_qar : pd.Series, index (idx_list)
 |          Additive constant of value-adjustment
 |              of QAR (quadratic autoregressive)
 |              method forecasting implied variance
 |          Reference expression:
 |              A_qar = VI2(t) pv_und('prederr',t) Inv[ v2_und(t+1) ]
 |
 |      mult_qar : pd.Series, index (idx_list),
 |          Multiplier of value-adjustment of QAR
 |              (quadratic autoregressive) method
 |              forecasting implied variance
 |          Reference expression:
 |              B_qar = [ VI2(t) - A_qar ] Inv[ vi2_qar(t|t-1) ]
 |
 |      min_vi2f_ratio : pd.DataFrame,
 |              index (idx_list),
 |              columns (vcf_step_list)
 |          Minimum realized s-step ratio of implied
 |              vairiance, VI2(t) Inv( VI2(t-s) ),
 |              serving as lower limit of forecasted
 |              implied variance over last observed
 |              value, VI2(t+s|t) Inv( VI2(t) )
 |
 |      Function call
 |      -------------
 |
 |      (qar_coef_comm, qar_coef_idio,
 |          const_qar, mult_qar, min_vi2f_ratio
 |          ) = DFbVIF_obj.get_qar_coefs()
 |
 |  get_stdev(self)
 |      Get sample standard deviation vector of vector time-series
 |
 |      Returns
 |      -------
 |
 |      stdev_vec : pd.Series, index (ts_list)
 |          Sample standard deviation vector of DFM-input
 |              vector time-series on data points in last
 |              learning window
 |          stdev_vec.name = asof
 |
 |      Function call
 |      -------------
 |
 |      stdev_vec = DFbVIF_obj.get_stdev()
 |
 |  get_und_variance(self)
 |      Get all estimated and forecasted variance of
 |          underlying time-series (underlying volatility
 |          indexes), and multiplier of value-adjustment
 |          of UVF method
 |
 |      Returns
 |      -------
 |
 |      und_variance : pd.DataFrame, index (idx_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted variance of VI-
 |              adjusted underlying time-series (underlying
 |              volatility indexes)
 |
 |      mult_uvf : pd.Series, index (idx_list)
 |          Multiplier of value-adjustment of UVF
 |              (underlying volatility forecasts
 |              as predictors) method forecasting
 |              implied variance
 |
 |      Function call
 |      -------------
 |
 |      und_variance, mult_uvf = (
 |          DFbVIF_obj.get_und_variance())
 |
 |  get_vi2_attrib(self)
 |      Get weights of attribution of UVF or QAR forecast
 |          (of implied variance) to dynamic sources of
 |          volatility of volatility indexes
 |
 |      Inputs
 |      ------
 |
 |      vif_type : str, in ('uvf', 'qar')
 |          Type of volatility index forecasts (VIF)
 |              and dynamic volatility attributions
 |              to be generated
 |          Type of VIF
 |              'uvf', UVF forecasts and attributions
 |              'qar', QAR forecasts and attributions
 |
 |      vi2_source_list : list, [
 |              'Common volatility',
 |              'Common serial-correlation',
 |              'Idiosyncratic volatility',
 |              'Idiosyncratic serial-correlation',
 |              'Prediction error',
 |              'Total']
 |          List of aggregated dynamic sources of volatility
 |              measured by contributions to (UVF or QAR)
 |              forecasts of implied variance
 |          (1) 'Common volatility': contribution from
 |              variances of dynamic common factors
 |          (2) 'Common serial-correlation': contribution
 |              from autocovariances of daynmic common
 |              factos
 |          (3) 'Idiosyncratic volatility': contribution
 |              from variance of idiosyncratic UDC
 |          (4) 'Idiosyncratic serial-correlation':
 |              contribution from autocovariance of
 |              idiosyncratic UDC
 |          (5) 'Prediction error': contribution from
 |              dynamic factor prediction error, UDC
 |              prediction error, and residual error
 |          (6) 'Total': sum total
 |
 |      vi2_attrib_uvf : pd.DataFrame, index (idx_list),
 |              columns (vi2_source_list + ['asof'])
 |          Weights of attribution of UVF forecast
 |              (of implied variance) to dynamic
 |              sources of volatility of volatility
 |              indexes
 |
 |      vi2_attrib_qar : pd.DataFrame, index (idx_list),
 |              columns (vi2_source_list + ['asof'])
 |          Weights of attribution of QAR forecast
 |              (of implied variance) to dynamic
 |              sources of volatility of volatility
 |              indexes
 |
 |      Returns
 |      -------
 |
 |      vi2_attrib : pd.DataFrame, index (idx_list),
 |              columns (vi2_source_list + ['asof'])
 |          Weights of attribution of forecast (of
 |              implied variance) to dynamic sources
 |              of volatility of volatility indexes
 |          Reference expression: vi2_attrib =
 |              = vi2_attrib_uvf or vi2_attrib_qar
 |
 |      Function call
 |      -------------
 |
 |      vi2_attrib = DFbVIF_obj.get_vi2_attrib()
 |
 |  get_vi2_forec(self)
 |      Get multi-step multivariate forecasts of implied
 |          variances, with underlying volatility forecasts
 |          (UVF) as predictors, or with quadratic auto-
 |          regressive (QAR) equation
 |
 |      Inputs
 |      ------
 |
 |      vif_type : str, in ('uvf', 'qar')
 |          Type of volatility index forecasts (VIF)
 |              and dynamic volatility attributions
 |              to be generated
 |          Type of VIF
 |              'uvf', UVF forecasts and attributions
 |              'qar', QAR forecasts and attributions
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted, each serving as expected
 |              volatility levels of its underlying time-
 |              series
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |          List of variance or covariance forecast steps
 |          Note: step = 0 for nowcast or estimate
 |
 |      vi2_forec_uvf : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances with underlying volatility
 |              forecasts (UVF) as predictors
 |
 |      vi2_forec_qar : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances with quadratic autoregression
 |              (QAR) equation
 |
 |      Returns
 |      -------
 |
 |      vi2_forec : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances
 |          Reference expression: vi2_forec =
 |              = vi2_forec_uvf or vi2_forec_qar
 |
 |      Function call
 |      -------------
 |
 |      vi2_forec = DFbVIF_obj.get_vi2_forec()
 |
 |  get_vi2_forec_ratio(self)
 |      Get ratios of forecasts of implied variances
 |          over realized values of implied variances
 |          at vcf_step = 0
 |
 |      Imports
 |      -------
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted, each serving as expected
 |              volatility levels of its underlying time-
 |              series
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |          List of variance or covariance forecast steps,
 |              in multi-step forecasts of variance, covariance
 |              or autocovariance of vector time-series
 |          Note: step = 0 for nowcast or estimate
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series,
 |              as input data for DFbVIF model learning
 |              and inference
 |          Row time-series of column vector with first
 |              column as oldest and last one as latest
 |
 |      vi2_forec_uvf : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances with underlying volatility
 |              forecasts (UVF) as predictors
 |
 |      vi2_forec_qar : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances with quadratic autoregression
 |              (QAR) equation
 |
 |      Returns
 |      -------
 |
 |      vi2_forec_ratio : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Ratios of UVF and QAR forecasts of implied
 |              variances over realized values of implied
 |              variances at vcf_step = 0, with ratios
 |              = 1 at vcf_step = 0
 |
 |      Function call
 |      -------------
 |
 |      vi2_forec_ratio = DFbVIF_obj.get_vi2_forec_ratio()
 |
 |  get_vil_forecast(self)
 |      Get multi-step multivariate forecasts of volatility
 |          indexes, with underlying volatility forecasts
 |          (UVF) as predictors, or with quadratic auto-
 |          regressive (QAR) equation
 |
 |      Inputs
 |      ------
 |
 |      vif_type : str, in ('uvf', 'qar')
 |          Type of volatility index forecasts (VIF)
 |              and dynamic volatility attributions
 |              to be generated
 |          Type of VIF
 |              'uvf', UVF forecasts and attributions
 |              'qar', QAR forecasts and attributions
 |
 |      idx_list : list
 |          Sublist of vi_list of name/symbol/label
 |              strings of volatility index time-series
 |              to be forecasted, each serving as expected
 |              volatility levels of its underlying time-
 |              series
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |          List of variance or covariance forecast steps
 |          Note: step = 0 for nowcast or estimate
 |
 |      vil_forecast_uvf : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of volatility
 |              indexes with underlying volatility forecasts
 |              (UVF) as predictors
 |
 |      vil_forecast_qar : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of volatility
 |              indexes with quadratic autoregression (QAR)
 |              equation
 |
 |      Returns
 |      -------
 |
 |      vil_forecast : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of
 |              volatility indexes
 |          Reference expression: vil_forecast =
 |              = vil_forecast_uvf or vil_forecast_qar
 |
 |      Function call
 |      -------------
 |
 |      vil_forecast = DFbVIF_obj.get_vil_forecast()
 |
 |  set_data(self, MTS)
 |      Set, or reset, observed vector time-series (VTS) data
 |
 |      Arguments
 |      ---------
 |
 |      MTS : pandas.DataFrame,
 |              index (vi_list + ts_list),
 |              columns (asof_list)
 |          Multiple time-series data set including
 |              volatility index level vector time-
 |              series (VIL, pd.DataFrame, index=vi_list)
 |              and DFM-input vector time-series (VTS,
 |              pd.DataFrame, index=ts_list)
 |          Row time-series of column vector with first
 |              column as oldest and last one as latest
 |
 |      Outputs
 |      -------
 |
 |      VIL : pandas.DataFrame, index (vi_list),
 |              columns (asof_list)
 |          Volatility index level vector time-series,
 |              as input data for DFbVIF model learning
 |              and inference
 |          Row time-series of column vector with first
 |              column as oldest and last one as latest
 |
 |      VTS : pandas.DataFrame, index (ts_list),
 |              columns (asof_list)
 |          DFM-input vector time-series (of logarithmic/
 |              percent changes in prices/values/indexes)
 |              including underlying vector time-series
 |              (underlying volatility indexes) and other
 |              information-enhancing vector time-series
 |              (dynamically correlated with underlying
 |              ones), as input data for DFbVIF model
 |              learning and inference
 |          Row time-series of column vector with first
 |              column as oldest and last one as latest
 |
 |      vi_list : list
 |          List of name/symbol/label strings of multiple
 |              volatility index time-series, as list of
 |              index axis of VIL DataFrame
 |
 |      ts_list : list ([ts_1, ts_2, ...])
 |          List of name/symbol/label strings of individual
 |              time-series of DFM-input vector time-series,
 |              as list of index axis of VTS DataFrame
 |
 |      asof_list : list
 |              ([t_stamp_1, t_stamp_2, ..., t_stamp_T])
 |          List of as-of time-stamps of observed (DFM-input
 |              vector) time-series, as list of columns axis
 |              of VIL or VTS DataFrame
 |
 |      num_vi : int >= 1
 |          Number of volatility indexes = len(vi_list)
 |
 |      num_ts : int >= 1
 |          Number of observed time-series
 |              = len(ts_list)
 |
 |      len_ts : int > 1
 |          Length of observed (vector) time-series
 |              = len(asof_list)
 |
 |      idx_list : obj
 |
 |      und_list : obj
 |
 |      Function call
 |      -------------
 |
 |      DFbVIF_obj.set_data(MTS)
 |
 |  set_param(self, vol_index_dict=None, len_learn_window=None, var_order=None, num_factors=None, ar_order_idio=None, num_pcs=None, alt_ar_order=None, alt_num_pcs=None, vif_type=None, max_forecast_step=None)
 |      Set, update or reset value(s) of any, some or all parameter(s)
 |
 |      Learning parameters
 |      -------------------
 |
 |      vol_index_dict : dict,
 |              keys (vi_list),
 |                  vi_list : list (vi1, vi2, ...)
 |              values (sub(ts_list) or =None)
 |                  ts_list : list (ts1, ts2, ...)
 |          dict-Type list of key-value pairs of volatility
 |              indexes (keys, vi_list) and, if to be
 |              forecasted, correspondent underlying time-
 |              series (values, sub(ts_list))
 |          Reference expression:
 |              und_list = [v for v in obj.values() if (v in ts_list)]
 |              idx_list = [k for k in vi_list if (obj[k] in und_list)]
 |              und_list = [obj[k] for k in idx_list]
 |
 |      len_learn_window : int >> 1
 |          Length of trailing time window of data points
 |              for model learning
 |
 |      var_order : int >= 1
 |          Vector autoregressive (VAR) order, p, of dynamic
 |              factor model for common components of vector
 |              time-series
 |          Notes:
 |              var_order <= len_learn_window
 |              len_ts >= len_learn_window + (3 var_order)
 |
 |      num_factors : int >= 1
 |          Number of factors of dynamic factor model for
 |              common components of vector time-series
 |          Notes:
 |              num_factors < min(len_learn_window, num_ts)
 |
 |      ar_order_idio : int >= 1
 |          Autoregressive (AR) order, q, of AR model for
 |              idiosyncratic components of individual time-
 |              series, with q applying to all time-series
 |              other than those specified, if any, in dict-
 |              type parameter alt_ar_order
 |          Notes:
 |              ar_order_idio <= len_learn_window
 |              len_ts >= len_learn_window + (2 ar_order_idio)
 |
 |      num_pcs : int >= 1
 |          Number of principal components (PCs), m, of PC-
 |              based AR model for idiosyncratic components
 |              of individual time-series, with m applying
 |              to all time-series other than those specified,
 |              if any, in dict-type parameter alt_num_pcs
 |          Notes:
 |              num_pcs < ar_order_idio
 |
 |      alt_ar_order : dict {ts1id: q1, ts2id: q2, ...} or {}
 |          Autoregressive (AR) orders, q1, q2, ..., if any,
 |              applying to idiosyncratic components of
 |              specified time-series ts1, ts2, ...
 |          Notes:
 |              ts1id, ts2id, ...: in VTS.index, labels of
 |              specified time-series ts1, ts2, ...
 |
 |      alt_num_pcs : dict {ts1id: m1, ts2id: m2, ...} or {}
 |          Numbers of principal components (PCs), m1, m2,
 |              ..., if any, applying to idiosyncratic
 |              components of specified time-series ts1,
 |              ts2, ...
 |          Notes:
 |              ts1id, ts2id, ...: in VTS.index, labels of
 |              specified time-series ts1, ts2, ...
 |
 |      Inference parameters
 |      --------------------
 |
 |      vif_type : str, in ('uvf', 'qar')
 |          Type of volatility index forecasts (VIF)
 |              and dynamic volatility attributions
 |              to be generated
 |          Type of VIF
 |              'uvf', UVF forecasts and attributions
 |              'qar', QAR forecasts and attributions
 |
 |      max_forecast_step : int >= 1
 |          Maximum number of forecasting steps
 |              of volatility (variance-covariance)
 |              forecasts
 |
 |      Function call
 |      -------------
 |
 |      DFbVIF_obj.set_param(
 |          param_name=param_value)
 |
 |      DFbVIF_obj.set_param(
 |          param1_name=param1_value,
 |          param2_name=param2_value, ...)
 |
 |      DFbVIF_obj.set_param(
 |          vol_index_dict=vol_index_dict,
 |          len_learn_window=len_learn_window,
 |          var_order=var_order,
 |          num_factors=num_factors,
 |          ar_order_idio=ar_order_idio,
 |          num_pcs=num_pcs,
 |          alt_ar_order=alt_ar_order,
 |          alt_num_pcs=alt_num_pcs,
 |          vif_type=vif_type,
 |          max_forecast_step=max_forecast_step)
 |
 |  variance(self)
 |      Generate data objects of multi-step multivariate
 |          forecasts of implied variance and volatility
 |          index, and associated dynamic volatility
 |          attributions
 |
 |      Inputs
 |      ------
 |
 |      vif_type : str, in ('uvf', 'qar')
 |          Type of volatility index forecasts (VIF)
 |              and dynamic volatility attributions
 |              to be generated
 |          Type of VIF
 |              'uvf', UVF forecasts and attributions
 |              'qar', QAR forecasts and attributions
 |
 |      all_step_list : list, [
 |              (- max(var_order, max_ar_order)), ...,
 |              -1, 0, 1, ..., max_forecast_step]
 |          List of time steps of estimated (step <= 0)
 |              and forecasted (step >= 1) variance data
 |
 |      all_variance : pd.DataFrame, index (ts_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted variance of
 |              DFM-inputd vector time-series, estimated
 |              and forecasted by DFM-based volatility
 |              forecast model DFVCM
 |          Reference expression:
 |              diag( X0 V(t+s-j) X0' ) + W(t+s-j)) + Rr(t)
 |                  j,s = 0,1,2,...
 |
 |      comm_lagtup_list : list,
 |              [(1, 1), (1, 2), ..., (j, k), ..., (p, p)]
 |                  j=1,2,...,p; k=j,j+1,...,p
 |          List of time lag tuples of common components
 |              of estimated and forecasted quadratic VAR
 |              terms, with p = var_order
 |
 |      idio_lagtup_list : list,
 |              [(1, 1), (1, 2), ..., (j, k), ..., (q, q)]
 |                  j=1,2,...,q; k=j,j+1,...,q
 |          List of time lag tuples of idiosyncratic
 |              components of estimated and forecasted
 |              quadratic VAR terms, with q = max_ar_order
 |
 |      indiv_var_parts : dict, keys ('comm', 'idio', 'asof')
 |              obj['comm'] : pd.DataFrame, index (ts_list),
 |                  columns (comm_lagtub_list + ['pred_err'])
 |              obj['idio'] : pd.DataFrame, index (ts_list),
 |                  columns (idio_lagtub_list + ['pred_err'])
 |          Parts of variance of individual time-series of
 |              DFM-input vector time-series, predicted by
 |              dynamic common factors for obj['comm'], and
 |              by idiosycratic UDC for obj['idio']
 |          Reference expression of 'comm'
 |              diag( X0 diag( A(j) V(t+1-j, t+1-k) A(k)' ) X0' );
 |              diag( X0 Rv(t) X0' );
 |                  for j = 1,2,...,p, k = 1,2,...,p
 |          Reference expression of 'idio'
 |              D(j) W(t+1-j, t+1-k) D(k)';
 |              Re(t) + Rr(t);
 |                  for j = 1,2,...,q, k = 1,2,...,q
 |
 |      vcf_step_list : list, [0, 1, ..., max_forecast_step]
 |          List of variance or covariance forecast steps,
 |              in multi-step forecasts of variance, covariance
 |              or autocovariance of vector time-series
 |          Note: step = 0 for nowcast or estimate
 |
 |      vi2_source_list : list, [
 |              'Common volatility',
 |              'Common serial-correlation',
 |              'Idiosyncratic volatility',
 |              'Idiosyncratic serial-correlation',
 |              'Prediction error',
 |              'Total']
 |          List of aggregated dynamic sources of volatility
 |              measured by contributions to (UVF or QAR)
 |              forecasts of implied variance
 |
 |      Outputs
 |      -------
 |
 |      und_variance : pd.DataFrame, index (idx_list),
 |              columns (all_step_list + ['asof'])
 |          All estimated and forecasted variance of VI-
 |              adjusted underlying time-series (underlying
 |              volatility indexes)
 |
 |      qar_coef_comm : pd.DataFrame, index (idx_list),
 |              columns (comm_lagtup_list + ['asof'])
 |          Diagonal factor-based QAR coefficient
 |              matrixes in 1-step forecast of variance
 |              of underlying time-series
 |          Note of QAR:
 |              factor-explained parts of variance of
 |              underlying time-series are additive terms
 |              of quadratic autoregressive (QAR) equation
 |
 |      qar_coef_idio : pd.DataFrame, index (idx_list),
 |              columns (idio_lagtup_list + ['asof'])
 |          Diagonal UDC-based QAR coefficient
 |              matrixes in 1-step forecast of
 |              variance of underlying time-series
 |          Note of QAR:
 |              UDC-explained parts of variance of under-
 |              lying time-series are additive terms of
 |              quadratic autoregressive (QAR) equation
 |
 |      vi2_forec_uvf : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances with underlying volatility
 |              forecasts (UVF) as predictors
 |
 |      vi2_forec_qar : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of implied
 |              variances with quadratic autoregression
 |              (QAR) equation
 |
 |      vi2_attrib_uvf : pd.DataFrame, index (idx_list),
 |              columns (vi2_source_list + ['asof'])
 |          Weights of attribution of UVF forecast
 |              (of implied variance) to dynamic
 |              sources of volatility of volatility
 |              indexes
 |
 |      vi2_attrib_qar : pd.DataFrame, index (idx_list),
 |              columns (vi2_source_list + ['asof'])
 |          Weights of attribution of QAR forecast
 |              (of implied variance) to dynamic
 |              sources of volatility of volatility
 |              indexes
 |
 |      vil_forecast_uvf : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of volatility
 |              indexes with underlying volatility forecasts
 |              (UVF) as predictors
 |
 |      vil_forecast_qar : pd.DataFrame, index (idx_list),
 |              columns (vcf_step_list + ['asof'])
 |          Multi-step multivariate forecasts of volatility
 |              indexes with quadratic autoregression (QAR)
 |              equation
 |
 |      Function call
 |      -------------
 |
 |      self.variance()
 |
 |      DFbVIF_obj.variance()
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables
 |
 |  __weakref__
 |      list of weak references to the object

>>>
